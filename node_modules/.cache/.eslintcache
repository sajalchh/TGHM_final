<<<<<<< HEAD
[{"/home/sajal/try/src/index.js":"1","/home/sajal/try/src/reportWebVitals.js":"2","/home/sajal/try/src/App.js":"3","/home/sajal/SE/project_final/TGHM_final/src/index.tsx":"4","/home/sajal/SE/project_final/TGHM_final/src/reportWebVitals.js":"5","/home/sajal/SE/project_final/TGHM_final/src/App.tsx":"6","/home/sajal/SE/project_final/TGHM_final/src/Routers/MasterRouter.js":"7","/home/sajal/SE/project_final/TGHM_final/src/Logic/addingData.ts":"8","/home/sajal/SE/project_final/TGHM_final/src/Hooks/useToken.js":"9","/home/sajal/SE/project_final/TGHM_final/src/Pages/Registration/Registration.js":"10","/home/sajal/SE/project_final/TGHM_final/src/Pages/Login/Login.js":"11","/home/sajal/SE/project_final/TGHM_final/src/Pages/Dashboard/Dashboard.js":"12","/home/sajal/SE/project_final/TGHM_final/src/Logic/Management.ts":"13","/home/sajal/SE/project_final/TGHM_final/src/Logic/Database.ts":"14","/home/sajal/SE/project_final/TGHM_final/src/Logic/Agent.ts":"15","/home/sajal/SE/project_final/TGHM_final/src/Logic/Customer.ts":"16","/home/sajal/SE/project_final/TGHM_final/src/Logic/Station.ts":"17","/home/sajal/SE/project_final/TGHM_final/src/Logic/Restaurant.ts":"18","/home/sajal/SE/project_final/TGHM_final/src/Logic/Train.ts":"19","/home/sajal/SE/project_final/TGHM_final/src/Logic/Time.ts":"20","/home/sajal/SE/project_final/TGHM_final/src/Logic/Order.ts":"21","/home/sajal/SE/project_final/TGHM_final/src/Routers/RegistrationRouter.js":"22","/home/sajal/SE/project_final/TGHM_final/src/Design/Colors.js":"23","/home/sajal/SE/project_final/TGHM_final/src/Routers/AccountDashRoutes/RestaurantDashRouter.js":"24","/home/sajal/SE/project_final/TGHM_final/src/Routers/AccountDashRoutes/PassengerDashRouter.js":"25","/home/sajal/SE/project_final/TGHM_final/src/Routers/AccountDashRoutes/AgentDashRouter.js":"26","/home/sajal/SE/project_final/TGHM_final/src/Routers/AccountDashRoutes/ManagementDashRouter.js":"27","/home/sajal/SE/project_final/TGHM_final/src/Components/DashBoard/DashBoard.js":"28","/home/sajal/SE/project_final/TGHM_final/src/Logic/Account.ts":"29","/home/sajal/SE/project_final/TGHM_final/src/Logic/Enum.ts":"30","/home/sajal/SE/project_final/TGHM_final/src/Logic/System.ts":"31","/home/sajal/SE/project_final/TGHM_final/src/Logic/Menu.ts":"32","/home/sajal/SE/project_final/TGHM_final/src/Logic/Item.ts":"33","/home/sajal/SE/project_final/TGHM_final/src/Pages/Registration/PassengerForm.js":"34","/home/sajal/SE/project_final/TGHM_final/src/Pages/Registration/RestaurantForm.js":"35","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Restaurant/RestaurantHomePage.js":"36","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Restaurant/RestaurantAgentsPage.js":"37","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Restaurant/RestaurantOrdersPage.js":"38","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Restaurant/RestaurantMenuPage.js":"39","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Passenger/PassengerOrderPage.js":"40","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Passenger/PassengerHomePage.js":"41","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Agent/AgentHomePage.js":"42","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Agent/AgentOrderPage.js":"43","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Management/ManagementStatsPage.js":"44","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Management/ManagementRailwaysPage.js":"45","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Management/ManagementHomePage.js":"46","/home/sajal/SE/project_final/TGHM_final/src/Components/LogoutButton/LogoutButton.js":"47","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Passenger/PassengerBookingPage.js":"48","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Passenger/PassengerItemPage.js":"49","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Passenger/PassengerStationPage.js":"50","/home/sajal/SE/project_final/TGHM_final/src/Components/DashBoard/DashBoardCard.js":"51"},{"size":500,"mtime":1618141151410,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":1618141151410,"results":"54","hashOfConfig":"53"},{"size":528,"mtime":1618141151410,"results":"55","hashOfConfig":"53"},{"size":500,"mtime":1617647104000,"results":"56","hashOfConfig":"57"},{"size":362,"mtime":1617647064000,"results":"58","hashOfConfig":"57"},{"size":371,"mtime":1618142643634,"results":"59","hashOfConfig":"57"},{"size":1622,"mtime":1617647104000,"results":"60","hashOfConfig":"57"},{"size":4846,"mtime":1617647104000,"results":"61","hashOfConfig":"57"},{"size":732,"mtime":1617647104000,"results":"62","hashOfConfig":"57"},{"size":2121,"mtime":1617647104000,"results":"63","hashOfConfig":"57"},{"size":6282,"mtime":1617647104000,"results":"64","hashOfConfig":"57"},{"size":3920,"mtime":1617647104000,"results":"65","hashOfConfig":"57"},{"size":2583,"mtime":1617647104000,"results":"66","hashOfConfig":"57"},{"size":8518,"mtime":1618142091406,"results":"67","hashOfConfig":"57"},{"size":2028,"mtime":1617647104000,"results":"68","hashOfConfig":"57"},{"size":2059,"mtime":1617647104000,"results":"69","hashOfConfig":"57"},{"size":999,"mtime":1617647104000,"results":"70","hashOfConfig":"57"},{"size":4099,"mtime":1617647446000,"results":"71","hashOfConfig":"57"},{"size":1165,"mtime":1617647104000,"results":"72","hashOfConfig":"57"},{"size":1916,"mtime":1617647104000,"results":"73","hashOfConfig":"57"},{"size":5598,"mtime":1617647624000,"results":"74","hashOfConfig":"57"},{"size":784,"mtime":1617647104000,"results":"75","hashOfConfig":"57"},{"size":172,"mtime":1617647104000,"results":"76","hashOfConfig":"57"},{"size":1340,"mtime":1617647104000,"results":"77","hashOfConfig":"57"},{"size":869,"mtime":1617647104000,"results":"78","hashOfConfig":"57"},{"size":826,"mtime":1617647104000,"results":"79","hashOfConfig":"57"},{"size":1116,"mtime":1617647104000,"results":"80","hashOfConfig":"57"},{"size":2252,"mtime":1617647104000,"results":"81","hashOfConfig":"57"},{"size":856,"mtime":1617647104000,"results":"82","hashOfConfig":"57"},{"size":840,"mtime":1617647104000,"results":"83","hashOfConfig":"57"},{"size":128,"mtime":1617647104000,"results":"84","hashOfConfig":"57"},{"size":831,"mtime":1617647104000,"results":"85","hashOfConfig":"57"},{"size":422,"mtime":1617647104000,"results":"86","hashOfConfig":"57"},{"size":7753,"mtime":1617647104000,"results":"87","hashOfConfig":"57"},{"size":7296,"mtime":1617647104000,"results":"88","hashOfConfig":"57"},{"size":959,"mtime":1617647104000,"results":"89","hashOfConfig":"57"},{"size":1359,"mtime":1617647104000,"results":"90","hashOfConfig":"57"},{"size":4670,"mtime":1617647104000,"results":"91","hashOfConfig":"57"},{"size":1105,"mtime":1617647104000,"results":"92","hashOfConfig":"57"},{"size":2488,"mtime":1617647104000,"results":"93","hashOfConfig":"57"},{"size":1159,"mtime":1617647104000,"results":"94","hashOfConfig":"57"},{"size":1004,"mtime":1617647104000,"results":"95","hashOfConfig":"57"},{"size":1923,"mtime":1617647104000,"results":"96","hashOfConfig":"57"},{"size":125,"mtime":1617647104000,"results":"97","hashOfConfig":"57"},{"size":125,"mtime":1617647104000,"results":"98","hashOfConfig":"57"},{"size":995,"mtime":1617647104000,"results":"99","hashOfConfig":"57"},{"size":400,"mtime":1617647104000,"results":"100","hashOfConfig":"57"},{"size":2002,"mtime":1617647104000,"results":"101","hashOfConfig":"57"},{"size":2360,"mtime":1617647104000,"results":"102","hashOfConfig":"57"},{"size":2874,"mtime":1617647104000,"results":"103","hashOfConfig":"57"},{"size":494,"mtime":1617647104000,"results":"104","hashOfConfig":"57"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qoamem",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"1wtrra5",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"116"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"113"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"113"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"113"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"113"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"113"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"113"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"113"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"113"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"/home/sajal/try/src/index.js",[],"/home/sajal/try/src/reportWebVitals.js",[],"/home/sajal/try/src/App.js",[],"/home/sajal/SE/project_final/TGHM_final/src/index.tsx",[],["229","230"],"/home/sajal/SE/project_final/TGHM_final/src/reportWebVitals.js",[],["231","232"],"/home/sajal/SE/project_final/TGHM_final/src/App.tsx",[],"/home/sajal/SE/project_final/TGHM_final/src/Routers/MasterRouter.js",["233","234","235"],"import React, {useState} from 'react';\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport Login from \"../Pages/Login/Login\";\nimport Registration from \"../Pages/Registration/Registration\";\nimport Dashboard from \"../Pages/Dashboard/Dashboard\";\nimport useToken from \"../Hooks/useToken\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport {Database} from \"../Logic/Database\";\nimport {Management} from \"../Logic/Management\";\n\nexport default function MasterRouter(){\n    const { token, setToken } = useToken();\n\n    const restrictedPage = (restrictedComponent, redirectComponent) => {\n        return token ? restrictedComponent : redirectComponent;\n    }\n\n    const timeout = { enter: 800, exit: 400 };\n    return(\n        <div className=\"master-router-wrapper\">\n            <TransitionGroup component=\"div\">\n                <CSSTransition timeout={timeout} classNames=\"pageSlider\" mountOnEnter={false} unmountOnExit={true}>\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\">\n                        {!token ? <Login setToken={setToken} /> : <Redirect to=\"/dashboard\" />}\n                    </Route>\n                    <Route path=\"/registration\">\n                        <Registration />\n                    </Route>\n                    <Route path=\"/dashboard\">\n                        {restrictedPage(<Dashboard />, <Login setToken={setToken}/> )}\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n                    </CSSTransition>\n            </TransitionGroup>\n        </div>\n    )\n}","/home/sajal/SE/project_final/TGHM_final/src/Logic/addingData.ts",["236","237","238","239","240","241","242","243","244","245","246","247","248","249"],"\nimport { Agent } from './Agent';\nimport { Customer } from './Customer';\nimport { AccountType } from './Enum';\nimport { Item } from './Item';\nimport { Menu } from './Menu';\nimport { Restaurant } from './Restaurant';\nimport { Station } from './Station';\nimport { Time } from './Time';\nimport {Train} from './Train';\nimport {Management} from './Management';\nimport { readFile } from 'node:fs';\nimport { Database } from './Database';\nimport {Order} from \"./Order\";\n\n//Database.readState();\nexport function AddData() {\n    let m = Management.getInstance();\n    let c1 = new Customer(\"sajal\", \"sajalchh\", \"hello\", \"9293945535\");\n    let c2 = new Customer(\"shaswat\", \"shaswat621\", \"kgpianboy\", \"9293945235\");\n    let c3 = new Customer(\"abhishek\", \"gandhi\", \"baba\", \"91885665571\")\n\n    let t1 = new Train(\"mumbai rajdhani\", \"12951\", new Map<string, Time>(), new Map<string, number>());\n    let t2 = new Train(\"Howrah Express\", \"12833\", new Map<string, Time>(), new Map<string, number>());\n\n    let s1 = new Station(\"Mumbai\");\n    let s2 = new Station(\"Delhi\");\n    let s3 = new Station(\"Kolkata\");\n    let s4 = new Station(\"Raipur\");\n    let s5 = new Station(\"Nagpur\");\n    let s6 = new Station(\"Ahmedabad\");\n    let s7 = new Station(\"Durg\");\n    let s8 = new Station(\"Surat\");\n    let s9 = new Station(\"Kota\");\n\n    t1.addStation(s1, new Time(7, 53));\n    t1.addStation(s2, new Time(8, 35));\n    t1.addStation(s8, new Time(3, 31));\n    t1.addStation(s9, new Time(16, 30));\n\n    t2.addStation(s1, new Time(0, 15));\n    t2.addStation(s3, new Time(23, 59));\n    t2.addStation(s4, new Time(22, 55));\n    t2.addStation(s5, new Time(17, 45));\n    t2.addStation(s6, new Time(10, 5));\n    t2.addStation(s7, new Time(22, 10));\n\n    let r1 = new Restaurant(\"sajal dhaba\", \"dhaba\", \"123\");\n    let r2 = new Restaurant(\"club mahindra\", \"mahindra\", \"123\");\n    let r3 = new Restaurant(\"dominos\", \"domi\", \"123\");\n    let r4 = new Restaurant(\"foodbuz\", \"food\", \"123\");\n    let r5 = new Restaurant(\"swastam\", \"swami\", \"123\");\n    let r6 = new Restaurant(\"Mio Amore\", \"mio_me\", \"123\");\n    let r7 = new Restaurant(\"Arabian Nights\", \"nights\", \"123\");\n    let r8 = new Restaurant(\"KFC\", \"kfc\", \"123\");\n\n    m.updateRestarantStatus(r1, 1);\n    m.updateRestarantStatus(r2, 1);\n    m.updateRestarantStatus(r3, 1);\n    m.updateRestarantStatus(r4, 1);\n    m.updateRestarantStatus(r5, 1);\n    m.updateRestarantStatus(r6, 1);\n    m.updateRestarantStatus(r7, 1);\n    m.updateRestarantStatus(r8, 1);\n\n    let a1 = new Agent(\"ramesh\", \"ramesh\", \"123\", r1);\n    let a2 = new Agent(\"ramu\", \"ramu\", \"123\", r2);\n    let a3 = new Agent(\"mahesh\", \"mahesh\", \"123\", r3);\n    let a4 = new Agent(\"ganesh\", \"ganesh\", \"123\", r4);\n    let a5 = new Agent(\"sham\", \"sham\", \"123\", r5);\n    let a6 = new Agent(\"shamu\", \"shamu\", \"123\", r6);\n    let a7 = new Agent(\"lalit\", \"lalu\", \"123\", r7);\n\n    r1.addStation(s1, new Time(0, 30));\n    r2.addStation(s2, new Time(0, 30));\n    r2.addStation(s3, new Time(0, 40));\n    r3.addStation(s4, new Time(0, 30));\n    r4.addStation(s5, new Time(0, 30));\n    r5.addStation(s6, new Time(0, 30));\n    r6.addStation(s7, new Time(0, 20));\n    r7.addStation(s8, new Time(0, 50));\n    r7.addStation(s9, new Time(0, 10));\n    r8.addStation(s1, new Time(0, 60));\n    r8.addStation(s2, new Time(0, 40));\n    r8.addStation(s5, new Time(0, 10));\n\n\n    r1.addItem(\"cheese fries\", 60, 8);\n    r1.addItem(\"veggie potato burger\", 60, 0);\n    r1.addItem(\"chicken burger\", 60, 0);\n    r1.addItem(\"veg whopper\", 60, 0);\n    r1.addItem(\"Mc veggie\", 60, 0);\n    r1.addItem(\"coke\", 60, 5);\n    r1.addItem(\"veg momos\", 60, 4);\n\n    r2.addItem(\"veg rolls\", 60, 2);\n    r2.addItem(\"dahi chaat\", 60, 3);\n    r2.addItem(\"hara bhara kabab\", 60, 12);\n    r2.addItem(\"chicken rolls\", 60, 2);\n\n    r3.addItem(\"Margerita\", 60, 1);\n    r3.addItem(\"Paneer pizza\", 60, 1);\n    r3.addItem(\"corn pizza\", 60, 1);\n    r3.addItem(\"lava cake\", 60, 21);\n\n    r4.addItem(\"butterchoch cake\", 260, 5);\n    r4.addItem(\"chocalate cake\", 560, 5);\n    r4.addItem(\"pineapple cake\", 600, 5);\n    r4.addItem(\"oreo milkshake\", 60, 13);\n\n    r5.addItem(\"samosa\", 430, 6);\n    r5.addItem(\"raj kajori\", 450, 6);\n    r5.addItem(\"allu tikki\", 500, 6);\n    r5.addItem(\"masala soda\", 40, 22);\n\n    r6.addItem(\"Brownie\", 60, 21);\n    r6.addItem(\"coffee\", 60, 22);\n    r6.addItem(\"Chicken nuggets\", 60, 20);\n    r6.addItem(\"pastry\", 60, 21);\n\n    r7.addItem(\"hot sour soup\", 200, 15);\n    r7.addItem(\"biryani\", 60, 21);\n    r7.addItem(\"chicken biryani\", 360, 10);\n    r7.addItem(\"green salad\", 100, 14);\n\n    r8.addItem(\"chicken burger\", 200, 0);\n    r8.addItem(\"chicken noodles\", 60, 9);\n    r8.addItem(\"fish nuggets\", 360, 17);\n    r8.addItem(\"prawns\", 700, 20);\n\n    console.log(r1);\n\n    let order1 = new Order(c1,0,r1.Menu.getMenuItems(),\"1\",t1,null);\n    order1.updateOrderStatus(1);\n    // Database.writeState();\n}\n",["250","251"],"/home/sajal/SE/project_final/TGHM_final/src/Hooks/useToken.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Pages/Registration/Registration.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Pages/Login/Login.js",["252","253"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Login.css';\nimport {Button, Card, Carousel, Checkbox, Form, Input, Row, Col, Image} from \"antd\";\nimport Colors from \"../../Design/Colors\";\nimport {Link} from \"react-router-dom\";\nimport {Management} from \"../../Logic/Management\";\nimport {Database} from \"../../Logic/Database\";\nimport Bg1 from \"../../Img/bg1.png\";\nimport Bg2 from \"../../Img/bg2.png\";\nimport Bg4 from \"../../Img/bg4.png\";\n\n// const AgentTest = {\n//     id: 1,\n//     name: \"David\",\n//     type: \"Agent\",\n//     username: \"David123\",\n//     password: \"123\",\n// }\n\n\nasync function loginUser(credentials){\n    // return fetch('http://localhost:8080/login', {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify(credentials)\n    // })\n    //     .then(data => data.json())\n    // if ((credentials.username === AgentTest.username)&&(credentials.password === AgentTest.password)) {\n    //     return {\n    //         'token': AgentTest.id\n    //     };\n    // }\n    console.log(credentials.username);\n    let isAuthenticID = Database.AuthenticateUser(credentials.username, credentials.password);\n    console.log(isAuthenticID);\n    if (isAuthenticID){\n        return{\n            'token': isAuthenticID\n        }\n    }\n}\n\n\nexport default function Login({setToken}){\n    const handleSubmit = async (values) => {\n        // e.preventDefault();\n        const result = await loginUser(values);\n        setToken(result.token, values.remember);\n        window.location.replace('/dashboard');\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed: ',errorInfo);\n    }\n\n    const CarouselStyle = {\n        height: window.innerHeight-10,\n        width: '100%',\n        color: '#fff',\n        lineHeight: '160px',\n        textAlign: 'center',\n        background: '#364d79',\n    }\n\n    const wrapperStyle = {\n        height: window.innerHeight - 10,\n    }\n\n    const colStyle = {\n        width: \"100%\",\n        height: \"100%\",\n    }\n\n    const colorStyles = {\n        white: Colors.white,\n        grey: Colors.lightgrey\n    }\n\n    return(\n        <div>\n            <div className=\"login-wrapper\" style={wrapperStyle}>\n                <Row style={colStyle}>\n                    <Col style={colStyle} span={12}>\n                        <Col style={colStyle} span={16} offset={4}>\n                            <div className=\"login-card-wrapper\" style={{backgroundColor: colorStyles.white}}>\n                            <Card className=\"login-card\" style={{width: \"100%\", borderColor: colorStyles.white}}>\n                                <Form\n                                    name=\"basic\"\n                                    initialValues={{\n                                        remember: true,\n                                    }}\n                                    onFinish={handleSubmit}\n                                    onFinishFailed={onFinishFailed}>\n                                        <Form.Item\n                                        label=\"Username\"\n                                        name=\"username\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please input your username',\n                                            }\n                                        ]}>\n                                            <Input />\n                                        </Form.Item>\n                                        <Form.Item\n                                        label=\"Password\"\n                                        name=\"password\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please input your password',\n                                            }\n                                        ]}\n                                        >\n                                            <Input.Password />\n                                        </Form.Item>\n                                        <Form.Item  name=\"remember\" valuePropName=\"checked\">\n                                            <Checkbox>Remember Me</Checkbox>\n                                        </Form.Item>\n                                        <Form.Item>\n                                            <Button type=\"primary\" htmlType=\"submit\">\n                                                Submit\n                                            </Button>\n                                        </Form.Item>\n                                </Form>\n                                <Link to={\"/registration\"}>Sign Up</Link>\n                            </Card>\n                            </div>\n                        </Col>\n                    </Col>\n                    <Col style={colStyle} span={12}>\n                        <div className=\"login-header-wrapper\">\n                            <div className=\"login-header\" style={{color: colorStyles.white}}>\n                                Technology in Good Health\n                            </div>\n                            <div className=\"login-content\" style={{color: colorStyles.grey}}>\n                                Order your food on the move <br />\n                                <span style={{fontSize: \"1.2rem\"}}>Or <Link to={\"/registration/restaurant\"}>Join Us</Link></span>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n            <Carousel autoplay>\n                <div>\n                    <Image src={Bg1} />\n                </div>\n                <div>\n                    {/*<h3 style = {CarouselStyle}>1</h3>*/}\n                    <Image src={Bg2} />\n                </div>\n                <div>\n                    {/*<h3 style = {CarouselStyle}>1</h3>*/}\n                    <Image src={Bg4} />\n                </div>\n            </Carousel>\n        </div>\n    )\n}\n\nLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n}","/home/sajal/SE/project_final/TGHM_final/src/Pages/Dashboard/Dashboard.js",["254","255"],"import React from 'react';\nimport DashBoard from \"../../Components/DashBoard/DashBoard\";\nimport AgentDashRouter from \"../../Routers/AccountDashRoutes/AgentDashRouter\";\nimport RestaurantDashRouter from \"../../Routers/AccountDashRoutes/RestaurantDashRouter\";\nimport ManagementDashRouter from \"../../Routers/AccountDashRoutes/ManagementDashRouter\";\nimport PassengerDashRouter from \"../../Routers/AccountDashRoutes/PassengerDashRouter\";\nimport {Management} from \"../../Logic/Management\";\nimport {Customer} from \"../../Logic/Customer\";\nimport {AccountType} from \"../../Logic/Enum\";\n\nconst allAccounts = [\n    {\n        id: 1,\n        name: \"David\",\n        type: \"\",\n        username: \"David123\",\n        password: \"123\",\n    },\n]\n\nconst AgentLinks = [\n    {link: \"/dashboard/\", item:\"Home\"},\n    {link: \"/dashboard/order\", item:\"Orders\"},\n]\n\nconst RestaurantLinks = [\n    {link: \"/dashboard/\", item:\"Home\"},\n    {link: \"/dashboard/orders\", item:\"Orders\"},\n    {link: \"/dashboard/menu\", item:\"Menu\"},\n    {link: \"/dashboard/agents\", item:\"Agents\"},\n]\n\nconst ManagementLinks = [\n    {link: \"/dashboard/\", item:\"Home\"},\n    {link: \"/dashboard/stats\", item:\"Statistics\"},\n    {link: \"/dashboard/railway\", item:\"Railways\"},\n]\n\nconst PassengerLinks = [\n    {link: \"/dashboard/\", item:\"Home\"},\n    {link: \"/dashboard/order\", item:\"Order\"}\n]\n\nexport default class Dashboard extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: {}\n        };\n    }\n\n    componentWillMount() {\n        let tokenString = sessionStorage.getItem('token');\n        if (!tokenString){\n            tokenString = localStorage.getItem('token');\n        }\n        const userToken = JSON.parse(tokenString);\n        console.log(userToken);\n        if (userToken === \"manager\"){\n            this.setState({account: Management.getInstance()})\n        }\n        let l = Management.loginC.get(userToken);\n        console.log(l);\n        if (l !== undefined){\n            this.setState({account: l});\n        }\n        let r = Management.loginR.get(userToken);\n        console.log(r);\n        if (r !== undefined){\n            this.setState({account: r});\n        }\n        let a = Management.loginA.get(userToken);\n        if (a !== undefined){\n            this.setState({account: a});\n        }\n    };\n\n    renderDashBoard(){\n        if (this.state.account.getType() === AccountType.Agent){\n            return (\n                <DashBoard menu={AgentLinks}>\n                    <div style={{minHeight: \"90vh\"}}>\n                        <AgentDashRouter account = {this.state.account} />\n                    </div>\n                </DashBoard>\n            );\n        }\n        if (this.state.account.getType() === AccountType.Restaurant){\n            return (\n                <DashBoard menu={RestaurantLinks}>\n                    <div style={{minHeight: \"90vh\"}}>\n                        <RestaurantDashRouter account = {this.state.account} />\n                    </div>\n                </DashBoard>\n            );\n        }\n        if (this.state.account.getType() === AccountType.Management){\n            return (\n                <DashBoard menu={ManagementLinks}>\n                    <div style={{minHeight: \"90vh\"}}>\n                        <ManagementDashRouter account = {this.state.account} />\n                    </div>\n                </DashBoard>\n            )\n        }\n        if (this.state.account.getType() === AccountType.Customer){\n            return (\n                <DashBoard menu={PassengerLinks}>\n                    <div style={{minHeight: \"90vh\"}}>\n                        <PassengerDashRouter account = {this.state.account} />\n                    </div>\n                </DashBoard>\n            )\n        }\n    }\n\n\n    render(){\n        console.log(this.state);\n        return(\n            <div>\n                {this.renderDashBoard()}\n            </div>\n        );\n    }\n}\n","/home/sajal/SE/project_final/TGHM_final/src/Logic/Management.ts",["256","257"],"import {Account} from \"./Account\";\nimport {AccountType, ApprovalStatus} from \"./Enum\";\nimport {Station} from \"./Station\";\nimport {Train} from \"./Train\";\nimport {Restaurant} from \"./Restaurant\";\nimport { Customer } from \"./Customer\";\nimport { Agent } from \"./Agent\";\nexport class Management extends Account{\n    static instance: Management|null = null;\n    static ApprovedRestaurants : Map<number,Restaurant> = new Map<number,Restaurant>();\n    static Application: Array<Restaurant> = [];\n    static Customers :Map<number,Customer> = new Map<number,Customer>();\n    static stationList: Map<number,Station> = new Map<number,Station>();\n    static trainList: Map<number,Train> = new Map<number,Train>();\n    static agentList : Map<number,Agent> = new Map<number,Agent>();\n\n    static loginC : Map<string, Customer> = new Map<string, Customer>();\n    static loginR : Map<string, Restaurant> = new Map<string, Restaurant>();\n    static loginA : Map<string, Agent> = new Map<string, Agent>();\n    static trainNo : Map<string,Train> = new Map<string,Train>();\n\n    static CustomersForStoring :Array<Customer> = new Array<Customer>();\n    static stationListForStoring: Array<Station> = new Array<Station>();\n    static trainListForStoring: Array<Train> = new Array<Train>();\n    static agentListForStoring : Array<Agent> = new Array<Agent>();\n    static restaurantForStoring : Array<Restaurant> = new Array<Restaurant>();\n\n    private constructor(){\n        super(\"Management\",\"Manager\",new Date(),AccountType.Management,\"admin\");\n    }\n    static getInstance() : Management{\n        if (this.instance==null){\n            this.instance = new Management();\n        }\n        return this.instance;\n    }\n\n\n    addStation(Station:Station) : void{\n        Management.stationList.set(Station.getID(),(Station));\n       \n    }\n    removeStation(Station:Station) : void{\n        Management.stationList.delete(Station.getID());\n    }\n    addTrain(Train:Train) : void{\n        Management.trainList.set(Train.getID(),(Train));\n\n    }\n    removeTrain(Train:Train) : void{\n        Management.trainList.delete(Train.getID());\n    }\n\n    updateRestarantStatus(Restarant:Restaurant,status:number) : void{\n        let x = Management.Application.indexOf(Restarant);\n        Restarant.accetanceStatus = ApprovalStatus[status];\n        Management.Application.splice(x,1);\n        if(status != ApprovalStatus.Rejected){\n            Management.ApprovedRestaurants.set(Restarant.getID(),(Restarant));\n            Management.restaurantForStoring.push(Restarant);\n        }\n    }\n}\nvar m = Management.getInstance();","/home/sajal/SE/project_final/TGHM_final/src/Logic/Database.ts",["258","259","260","261","262"],"\nimport { Agent } from './Agent';\nimport { Customer } from './Customer';\nimport { AccountType } from './Enum';\nimport { Item } from './Item';\nimport { Menu } from './Menu';\nimport { Restaurant } from './Restaurant';\nimport { Station } from './Station';\nimport { Time } from './Time';\nimport {Train} from './Train';\nimport {Management} from './Management';\nimport { readFile } from 'node:fs';\nimport { Account } from './Account';\nimport { System } from './System';\nimport CustomerData from \"./data/Customers.json\";\nimport RestaurantData from \"./data/Restaurants.json\";\nimport StationsData from \"./data/Stations.json\";\nimport TrainsData from \"./data/Trains.json\";\nimport AgentData from \"./data/Agents.json\";\n\n\nconst fs = require(\"fs\");\nconst CircularJSON = require('circular-json');\n\nexport class Database{\n    static instance: Database|null = null;\n\n    private constructor(){\n    }\n\n    static getInstance() : Database{\n        if (this.instance==null){\n            this.instance = new Database();\n        }\n        return this.instance;\n    }\n\n    static async writeState() {\n        try {\n            fs.writeFile(\"./data/Customers.json\", JSON.stringify(Management.Customers), function (){})\n            fs.writeFile(\"./data/Restaurants.json\", JSON.stringify(Management.Application), function (){})\n            fs.writeFile(\"./data/Stations.json\", JSON.stringify(Management.stationList), function (){})\n            fs.writeFile(\"./data/Trains.json\", JSON.stringify(Management.trainList), function (){})\n            await fs.writeJsonFile('./data/Customers.json', JSON.stringify(Management.Customers));\n            console.log(Management.Customers);\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n\n    // static readState(){\n    //     try {\n    //         let arrCust = CustomerData;\n    //         for (let i=0;i<arrCust.length;i++){\n    //             Management.Customers.push(Object.setPrototypeOf(arrCust[i], Customer.prototype));\n    //             Management.loginC.set(arrCust[i]._username, Object.setPrototypeOf(arrCust[i], Customer.prototype))\n    //         }\n    //         let arrRest = RestaurantData;\n    //         console.log(RestaurantData);\n    //         for (let i=0;i<arrRest.length;i++){\n    //             Management.Application.push(Object.setPrototypeOf(arrRest[i], Restaurant.prototype));\n    //             Management.loginR.set(arrRest[i]._username, Object.setPrototypeOf(arrRest[i], Restaurant.prototype))\n    //         }\n    //         console.log(Management.loginR);\n    //         let arrStation = StationsData;\n    //         for (let i=0;i<arrStation.length;i++){\n    //             Management.stationList.push(Object.setPrototypeOf(arrStation[i], Station.prototype));\n    //         }\n    //         let arrTrain = TrainsData;\n    //         for (let i=0;i<arrTrain.length;i++){\n    //             Management.trainList.push(Object.setPrototypeOf(arrTrain[i], Train.prototype));\n    //         }\n    //     } catch (err) {\n    //         console.error(err)\n    //         return false\n    //     }\n    // }\n\n\n    static readState(){\n        try {\n            let arrCust = CustomerData;\n            for (let i=0;i<arrCust.length;i++){\n                let x = Object.setPrototypeOf(arrCust[i], Customer.prototype);\n                Management.Customers.set(x.getID(),(x));\n                Management.loginC.set(x.getUsername(),x);\n                Account.unique= Math.max(x.getID(),Account.unique);\n                Account.unique++;\n            }\n            let arrRest = RestaurantData;\n            for (let i=0;i<arrRest.length;i++){\n                let x = Object.setPrototypeOf(arrRest[i], Restaurant.prototype);\n                Management.ApprovedRestaurants.set(x.getID(),(x));\n                Management.loginR.set(x.getUsername(), x);\n                Account.unique= Math.max(x.getID(),Account.unique);\n                Account.unique++;\n            }\n            let arrStation = StationsData;\n            for (let i=0;i<arrStation.length;i++){\n                let x = Object.setPrototypeOf(arrStation[i], Station.prototype)\n                Management.stationList.set(x.getID(), (x));\n            }\n            let arrTrains = TrainsData;\n            for (let i=0;i<arrTrains.length;i++){\n                let x = Object.setPrototypeOf(arrTrains[i], Train.prototype);\n                Management.trainList.set(x.getID(), (x));\n                Management.trainNo.set(x.TrainNo, x);\n            }\n            Management.trainListForStoring = Array.from(Management.trainList.values());\n            let arrAgent = AgentData;\n            for (let i=0;i<arrAgent.length;i++){\n                let x = Object.setPrototypeOf(arrAgent[i], Agent.prototype);\n                Management.agentList.set(x.getID(), (x));\n                Management.loginA.set(x.getUsername(), x);\n                System.active_agent.push(x);\n            }\n        } catch (err) {\n            console.error(err)\n            return false\n        }\n    }\n\n    static AuthenticateUser(username:string, password:string): string|null{\n        let l = Management.loginC.get(username);\n        console.log(l);\n        if (l !== undefined){\n            if (l.checkPassword(password)) return l.getUsername();\n        }\n        let r = Management.loginR.get(username);\n        console.log(Management.loginR);\n        console.log(r);\n        if (r !== undefined){\n            if (r.checkPassword(password)) return r.getUsername();\n        }\n        let a = Management.loginA.get(username);\n        if (a !== undefined){\n            if (a.checkPassword(password)) return a.getUsername();\n        }\n        if (username===\"manager\"){\n            if (password===\"123\"){\n                return \"manager\";\n            }\n        }\n        return null;\n    }\n\n    static getMenu(train : Train,  timemax : Time=new Time(23,59)) : [Map<string,Array<Item>>,Map<string,Array<Time>>]{\n        let timemin = new Time();\n        timemin.updateTime();\n        const rStation=train.Return_RouteStation();\n        let rTime:Map<string, Time> = new Map<string, Time> (train.Return_RouteTime());\n        let reqStations = [];\n        let time = [];\n        // console.log(rTime);\n        // console.log(timemin);\n        // console.log(timemax);\n        // console.log(typeof rTime);\n        // console.log(rTime.keys());\n        for(let key of Array.from(train.routeTime.keys())) {\n            let t = rTime.get(key);\n            // console.log(t);\n            if(t){\n                if(t.lessThanEqual(timemax)&&timemin.lessThanEqual(t)){\n                    reqStations.push(key);\n                    time.push(t);\n                }\n            }\n        }\n        console.log(reqStations);\n        let items= Array <Item>();\n        let times =  Array <Time>();\n        let i=0;\n        for(let stat of reqStations){\n            // console.log(stat);\n            let rs=rStation.get(stat);\n            // console.log(rs);\n            if(rs){\n                let ms=Management.stationList.get(rs);\n                console.log(typeof ms);\n                if(ms){\n                    console.log(ms.getID());\n                    Array.prototype.push.apply(items,ms.getItem());\n                    for(let x of ms.getItem()){\n                        times.push(time[i]);\n                    }\n                    // console.log(ms.getItem());\n                }\n            }\n            i++;\n        }\n        let final=new Map<string,Array<Item>>([]);\n        let final2 = new Map<string,Array<Time>>([]);\n        i=0;\n        for(let x of items){\n            let c = final.get(x.type);\n            let d = final2.get(x.type);\n            if(c && d) {\n                c.push(x);\n                d.push(times[i]);\n                final.set(x.type, c);\n                final2.set(x.type, d);\n            }\n            else{\n                c = new Array<Item>();\n                c.push(x);\n                final.set(x.type, c);\n                d = new Array<Time>();\n                d.push(times[i]);\n                final2.set(x.type, d);\n            }\n            i++;\n        }\n        console.log(items);\n        console.log(final);\n        return [final,final2];\n    }\n    getRestaurant(username:string) : Restaurant|null{\n        return null;    \n    }\n    getAgent(username:string) : Agent|null{\n        return null;\n    }\n}\n\n// let c = new Customer(\"Shashvat\", \"Shash\", \"123\", \"123456789\");\n// let r = new Restaurant(\"Dominos\", \"Dom\", \"234\", 15);\n// Database.writeState();\n//\n//\n//\n// Database.readState();\n","/home/sajal/SE/project_final/TGHM_final/src/Logic/Agent.ts",[],"/home/sajal/SE/project_final/TGHM_final/src/Logic/Customer.ts",["263"],"import {Account} from \"./Account\"\nimport { Agent } from \"./Agent\";\nimport { AccountType } from \"./Enum\"\nimport { Management } from \"./Management\";\nimport { Order } from \"./Order\";\nimport {Train} from \"./Train\"\n\nexport class Customer extends Account{\n    private __seatNO : string | undefined;\n    private __Train : Train | undefined;\n    private __Orders : Array<Order> = [];\n    private __allotedAgent : Agent | undefined;\n    private __phoneNumber : string;\n    constructor(name:string,username : string, password:string, phoneNo : string){\n        super(name,username,new Date(),AccountType.Customer,password);\n        this.__phoneNumber = phoneNo;\n        Management.loginC.set(this._username, this);\n        Management.Customers.set(this.getID(),(this));\n        Management.CustomersForStoring.push(this);\n    }\n    // static converfrmObj(obj:Object) {\n    //     let c: Customer = new Customer(obj._name, obj._password, obj._phoneNo);\n    // }\n    addOrder(Order:Order) : void{\n        this.__Orders.push(Order);\n    }\n    updateOrderStatus(orderId : number, status : number) : void{\n        for(let i of this.__Orders){\n            if(i.orderId === orderId){\n                i.updateOrderStatus(status);\n            }\n        }\n    }\n    getReciept(orderId : number){\n        for(let i of this.__Orders){\n            if(i.orderId === orderId){\n                return i.getReciept();\n            }\n        }\n    }\n    getOrder(orderId : number) : Order|null{\n        for(let i of this.__Orders){\n            if(i.orderId === orderId){\n                return i;\n            }\n        }\n        return null;\n    }\n    updateTrain(seatNo : string, train : Train){\n        this.__Train = train;\n        this.__seatNO = seatNo;\n    }\n\n    getOrderStatus(orderId : number){\n        for(let i of this.__Orders){\n            if(i.orderId == orderId){\n                return i.getOrderStatus();\n            }\n        }\n    }\n    checkPasswords(userName : string,password : string){\n\n    }\n    getOrderList() : Array<Order>{\n        return this.__Orders;\n    }\n}\n","/home/sajal/SE/project_final/TGHM_final/src/Logic/Station.ts",[],"/home/sajal/SE/project_final/TGHM_final/src/Logic/Restaurant.ts",["264","265","266","267","268"],"import {Account} from \"./Account\"\nimport {AccountType,AgentStatus,ApprovalStatus,FoodType} from \"./Enum\"\nimport {Menu} from \"./Menu\"\nimport {Management} from \"./Management\"\nimport {Item} from \"./Item\"\nimport {Agent} from \"./Agent\"\nimport {Certi} from \"./Certificate\"\nimport {Station} from \"./Station\"\nimport {Order} from \"./Order\"\nimport {System} from \"./System\"\nimport { Time } from \"./Time\"\n\nexport class Restaurant extends Account{\n    orderlist : Array<Order> = [];\n    private __timeToReach : Array<Time> = [];\n    private __agent : Array<number> = [];\n    private __agentStatus: Array<string> = [];\n    //private __agentTimeToGetBack : Array<number> = [];\n    accetanceStatus = ApprovalStatus[0];\n    Menu = new Menu();\n    certi: Array<Certi> = [];\n    servingStation : Array<number> = [];\n    \n    constructor(name:string,username:string,password:string) {\n        super(name,username,new Date(),AccountType.Restaurant,password);\n        Management.Application.push(this);\n        //this.__timeToReach = timeToReach;\n        Management.loginR.set(username, this);\n    }\n    getPrice(s : string){\n        return this.Menu.getPrice(s);\n    }\n    addItem(s : string , price : number, type:number){\n        let item = new Item(s, price, type, this.getID());\n        this.Menu.addItem(item);\n        for(let i of this.servingStation){\n            let ms=Management.stationList.get(i);\n            if(ms)\n            ms.addItem(item);\n        }\n    }\n    removeItem(item:Item){\n        this.Menu.removeItem(item);\n        for(let i of this.servingStation){\n            let ms=Management.stationList.get(i);\n            if(ms)\n            ms.removeItem(item);\n        }\n    }\n    provideCerti(file : Certi){\n        this.certi.push(file);\n    }\n    AddAgent(agent : Agent){\n        this.__agent.push(agent.getID());\n        this.__agentStatus.push(AgentStatus[0]);\n        //this.__agentTimeToGetBack.push(0);\n        System.active_agent.push(agent);\n        agent.addRestaurant(this);\n    }\n    removeAgent(agent : Agent){\n        let index = this.__agent.indexOf(agent.getID());\n        this.__agent.slice(index);\n        //this.__agentTimeToGetBack.slice(index);\n        this.__agentStatus.splice(index);\n        System.active_agent.slice(System.active_agent.indexOf(agent));\n    }\n\n    getAgents(){\n        return this.__agent;\n    }\n\n    //getClosestAgent(){\n    //    return Math.min.apply(Math,this.__agentTimeToGetBack);   \n    //}\n    allotAgent(order: Order,agent : Agent,time : number|null = null){\n        let index = this.__agent.indexOf(agent.getID());\n        let ag=Management.agentList.get(this.__agent[index]);\n        if(ag)\n            ag.updateAllotedOrder(order);\n         \n    }\n    updateOrderStatus(orderId : number,status : number, Item : Item){\n        for(let i of this.orderlist){\n            if(i.orderId ==orderId){\n                i.updateOrderStatus(status,Item);\n            }\n        }\n    }\n    addStation(Station : Station, time:Time){\n        Station.addRestaurant(this);\n        this.__timeToReach.push(time);\n        for(let i of this.Menu.getMenuItems()){\n            Station.addItem(i);\n        }\n        this.servingStation.push(Station.getID());\n    }\n    getOrderDetails(orderId : number){\n        for(let i of this.orderlist){\n            if(i.orderId ==orderId){\n                return i.getItemList(this);\n            }\n        }\n    }\n    getOrderStations(orderId: number){\n        for(let i of this.orderlist){\n            if(i.orderId ==orderId){\n                return i.getOrderStations(this);\n            }\n        }\n    }\n    updateAgentStatus(agent : Agent,status: number){\n        let index = this.__agent.indexOf(agent.getID());\n        this.__agentStatus[index] = AgentStatus[status];\n    }\n\n    getFreeAgents() : Array<Agent>{\n        let i=0;\n        let v : Array<Agent> = [];\n        for(let x of this.__agentStatus){\n            if(x==AgentStatus[0]){\n                let y = Management.agentList.get(this.__agent[i])\n                if(y)\n                v.push(y);\n            }\n            i++;\n        }\n        return v;\n    }\n\n}","/home/sajal/SE/project_final/TGHM_final/src/Logic/Train.ts",[],"/home/sajal/SE/project_final/TGHM_final/src/Logic/Time.ts",[],"/home/sajal/SE/project_final/TGHM_final/src/Logic/Order.ts",["269","270","271","272","273","274","275"],"import {Agent} from \"./Agent\";\nimport {Customer} from \"./Customer\";\nimport {AgentStatus, OrderStatus} from \"./Enum\";\nimport { Item } from \"./Item\";\nimport { Management } from \"./Management\";\nimport {Restaurant} from \"./Restaurant\";\nimport {Station} from \"./Station\";\nimport {Train} from \"./Train\";\nimport {Time} from \"./Time\";\n\nexport class Order{\n    static unique =0;\n    private __customer:Customer;\n    Order_Status:Array<string> = [];\n    private __agent: Array<number> = [];\n    private __seatNumber: string;\n    private __train: Train;\n    private __deliveryStation: Station|null;\n    private __selectedItems : Array<Item> = [];\n    private __Restaurants = new Set<Restaurant>();\n    __OrderTime : Time;\n    orderId;\n    constructor(customer:Customer,status:number=0,items:Array<Item>,seat_Number:string,train:Train, delivery_station:Station|null = null){\n        this.__customer=customer;\n        customer.addOrder(this);\n        this.__seatNumber=seat_Number;\n        this.__train=train;\n        this.__deliveryStation=delivery_station;\n        this.__selectedItems=items;\n        this.__OrderTime = Time.getCurrentTime();\n        this.orderId = Order.unique++;\n        customer.addOrder(this);\n        for(let i of items){\n            let x  = Management.ApprovedRestaurants.get(i.restaurant);\n            if(x)\n            this.__Restaurants.add(x);\n        }\n    }\n\n    setDeliveryStation(station : Station){\n        this.__deliveryStation = station;\n    }\n\n    addAgent(Agent : number){\n        this.__agent.push(Agent);\n    }\n\n    addItem(Item : Item){\n        this.__selectedItems.push(Item);\n        let ar=Management.ApprovedRestaurants.get(Item.restaurant);\n        if(ar){\n        this.__Restaurants.add(ar);\n        }\n        this.Order_Status.push(OrderStatus[0]);\n    }\n\n    Track_Order(){\n        return this.Order_Status;\n    }\n\n    updateOrderStatus(status:number, Item : Item|null = null){\n        switch (status){\n            case 0:\n                break;\n            case 1:\n                for(let i of this.Order_Status)\n                    i=OrderStatus[status];\n                for(let i of Array.from(this.__Restaurants)){\n                    i.orderlist.push(this);\n                }\n                break;\n            case 2:\n                if(Item!=null){\n                    let index = this.__selectedItems.indexOf(Item);\n                    this.Order_Status[index] = OrderStatus[index];\n                }\n                break;\n            case 3:\n                if(Item!=null){\n                    let index = this.__selectedItems.indexOf(Item);\n                    this.Order_Status[index] = OrderStatus[index];\n                }\n                break;\n            case 4:\n                if(Item!=null){\n                    let index = this.__selectedItems.indexOf(Item);\n                    this.Order_Status[index] = OrderStatus[index];\n                }\n                break;\n            case 5:\n                if(Item!=null){\n                    let index = this.__selectedItems.indexOf(Item);\n                    this.Order_Status[index] = OrderStatus[index];\n                }\n                break;\n            case 6:\n                if(Item!=null){\n                    let index = this.__selectedItems.indexOf(Item);\n                    this.Order_Status[index] = OrderStatus[index];\n                }\n                break;\n        }\n    }\n\n    getCustomer(){\n        return this.__customer;\n    }\n\n    getAgent(){\n        return this.__agent;\n    }\n\n    getSeatNumber(){\n        return this.__seatNumber;\n    }\n\n    getTrain(){\n        return this.__train;\n    }\n\n    getDeliveryStation(){\n        return this.__deliveryStation;\n    }\n\n    getItems(){\n        return this.__selectedItems;\n    }\n\n    getReciept(){\n        return this.orderId;\n    }\n\n    getItemList(Restaurant : Restaurant) : Array<Item>{\n        let x = [];\n        for(let i of this.__selectedItems){\n            if(Management.ApprovedRestaurants.get(i.restaurant)==Restaurant){\n                x.push(i);\n            }\n        }\n        return x;\n    }\n\n    getOrderStatus() : [Array<Item>, Array<string>]{\n        if(!this.__OrderTime.sum(new Time(0,15)).lessThanEqual(Time.getCurrentTime())){\n            let j=0;\n            for(let i of this.__selectedItems){\n                if(this.Order_Status[j]==OrderStatus[1]){\n                    this.updateOrderStatus(3,i);\n                }\n            }\n        }\n        return [this.__selectedItems,this.Order_Status];\n    }\n    getOrderStations(Restaurant : Restaurant) : Array<Station>{\n        let list = new Set<Station>();\n        let route = this.__train.Return_RouteStation();\n        let time = this.__train.Return_RouteTime();\n        for (let i of Array.from(route.keys())){\n            if(time.get(i)?.lessThanEqual(Time.getCurrentTime())){\n                for(let k of this.__selectedItems){\n                    let temp = route.get(i);\n                    if(temp)\n                    if(Management.stationList.get(temp)?.getItem().indexOf(k)!=-1 && Restaurant.getPrice(k.name)!=-1){\n                        let temp2 = Management.stationList.get(temp);\n                        if(temp2)\n                        list.add(temp2);\n                    }\n                }\n            }\n        }\n        return Array.from(list);\n    }\n\n}\n// var c= new Customer(\"a\",\"B\",\"C\",\"d\");\n// var n= new Agent();\n// var m=new Map();\n// m.set(\"!1\",\"Try\");\n// var t=new Train(\"train\",m);\n// var s=new Station(\"asdd\");\n// var item=[\"x\",\"y\",\"z\"];\n// var o= new Order(c,1,n,\"a11\",t,s,item);\n// console.log(o.Track_Order());\n","/home/sajal/SE/project_final/TGHM_final/src/Routers/RegistrationRouter.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Design/Colors.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Routers/AccountDashRoutes/RestaurantDashRouter.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Routers/AccountDashRoutes/PassengerDashRouter.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Routers/AccountDashRoutes/AgentDashRouter.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Routers/AccountDashRoutes/ManagementDashRouter.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Components/DashBoard/DashBoard.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Logic/Account.ts",[],"/home/sajal/SE/project_final/TGHM_final/src/Logic/Enum.ts",[],"/home/sajal/SE/project_final/TGHM_final/src/Logic/System.ts",["276"],"import {Agent} from \"./Agent\";\n\nexport class System{\n    static active_agent: Array<Agent> = [];\n    constructor(){\n    }\n    \n}","/home/sajal/SE/project_final/TGHM_final/src/Logic/Menu.ts",["277","278","279","280","281"],"import { readSync } from \"node:fs\";\nimport {Item} from \"./Item\"\nimport { Restaurant } from \"./Restaurant\";\nexport class Menu{\n    private __Items : Array<Item> = [];\n    constructor(){\n    }\n    getMenuItems(){\n        return this.__Items;\n    }\n    getPrice(s:string){\n        for (let i of this.__Items){\n            if(i.name==s){\n                return i.price;\n            }\n        }\n        return -1;\n    }\n    addItem(Item : Item){\n        this.__Items.push(Item);\n    }\n    addItembyName(name:string , price:number, type: number, restaurant : number){\n        let item = new Item(name, price, type,restaurant);\n        this.__Items.push(item);\n    }\n    removeItem(item: Item){\n        this.__Items.forEach((value,index)=>{\n            if(value==item) this.__Items.splice(index,1);\n            return;\n        });\n    }\n}","/home/sajal/SE/project_final/TGHM_final/src/Logic/Item.ts",["282","283"],"import {FoodType} from \"./Enum\"\nimport { Restaurant } from \"./Restaurant\";\nimport { Time } from \"./Time\";\nexport class Item{\n    name: string;\n    price: number;\n    type : string;\n    restaurant : number;\n    constructor(name : string,price : number,type : number,restaurant : number){\n        this.name = name;\n        this.price = price;\n        this.type = FoodType[type];\n        this.restaurant = restaurant;\n    }\n}","/home/sajal/SE/project_final/TGHM_final/src/Pages/Registration/PassengerForm.js",["284"],"import React from 'react';\nimport {DatePicker, Col, Form, Input, Row, Button, message} from \"antd\";\nimport styled from \"styled-components\";\nimport {Customer} from \"../../Logic/Customer\";\nimport {Database} from \"../../Logic/Database\";\n\nexport default function PassengerForm(){\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed: ',errorInfo);\n    }\n\n    const handleSubmit = (values) => {\n        let c = new Customer(values.firstName + values.lastName, values.username, values.password, values.phoneNo);\n        console.log(c);\n        message.success(\"User Created\")\n    }\n\n    const HeadingStyled = styled.h2`\n        text-align: center;\n        font-size: 1.5rem;\n        font-weight: 600;\n    `\n\n    return (\n        <div>\n            <HeadingStyled>Fill in the form to sign up</HeadingStyled>\n            <Form\n                name=\"basic\"\n                onFinish={handleSubmit}\n                onFinishFailed={onFinishFailed}\n                scrollToFirstError\n            >\n                <Row style={{width: \"100%\"}}>\n                    <Col span={24}>\n                        <Form.Item\n                            label=\"First Name\"\n                            name=\"firstName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Name required\"\n                                }\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row style={{width: \"100%\"}}>\n                    <Col span={24}>\n                        <Form.Item\n                            label=\"Last Name: \"\n                            name=\"lastName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Name required\"\n                                }\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row style={{width:\"100%\"}}>\n                    <Col span={24}>\n                        <Form.Item\n                            label=\"E-mail\"\n                            name=\"email\"\n                            rules={[\n                                {\n                                    type: 'email',\n                                    message: 'The input is not valid Email',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row style={{width: \"100%\"}}>\n                    <Col span={24}>\n                        <Form.Item\n                            label=\"Enter Username: \"\n                            name=\"username\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Username needed\",\n                                }\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"Enter Password: \"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Password needed\",\n                                }\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"Confirm Password: \"\n                            name=\"confirm\"\n                            dependencies={['password']}\n                            hasFeedback\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please confirm password'\n                                },\n                                ({ getFieldValue }) => ({\n                                    validator(_, value){\n                                        if (!value || getFieldValue('password') === value){\n                                            return Promise.resolve();\n                                        }\n\n                                        return Promise.reject(new Error(\"Passwords don't match\"))\n                                    }\n                                })\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row style={{width: \"100%\"}}>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"Phone Number: \"\n                            name=\"phoneNo\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Phone Number required\",\n                                }\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6} offset={3} style={{objectAlign: \"center\"}}>\n                        <Form.Item\n                            label=\"Date of Birth: \"\n                            name=\"dob\"\n                            rules={[\n                            ]}\n                        >\n                            <DatePicker />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row style={{width: \"100%\"}}>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"Captcha\"\n                            extra=\"We make sure that you are human\"\n                        >\n                            <Row gutter={8}>\n                                <Col span={12}>\n                                    <Form.Item\n                                        name=\"captcha\"\n                                        noStyle\n                                        rules={[\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Button>Get Captcha</Button>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={5}>\n                                    <Form.Item >\n                                        <Button type=\"primary\" htmlType=\"submit\">\n                                            Submit\n                                        </Button>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </div>\n    )\n}","/home/sajal/SE/project_final/TGHM_final/src/Pages/Registration/RestaurantForm.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Restaurant/RestaurantHomePage.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Restaurant/RestaurantAgentsPage.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Restaurant/RestaurantOrdersPage.js",["285","286"],"import React from 'react';\nimport DashBoardCard from \"../../../Components/DashBoard/DashBoardCard\";\nimport {Button, Card, Form, List, message, Select} from \"antd\";\nimport {Management} from \"../../../Logic/Management\";\n\nexport default function RestaurantOrderPage(props){\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed: ',errorInfo);\n    }\n\n    const computeCost = (order) => {\n        let cost = 0;\n        for (let i = 0;i<props.account.getOrderDetails(order.orderId).length;i++){\n            cost += props.account.getOrderDetails(order.orderId)[i].price;\n        }\n        return cost;\n    }\n\n\n\n\n    return (\n        <div>\n            {\n                props.account.orderlist.map(function(value, index){\n                    console.log(value);\n                    return (\n                        <Card title={\"Order ID \" + value.orderId} style={{ minWidth: \"2rem\", maxWidth:\"32%\" }}>\n                              <List\n                                  style={{margin: \"1rem\"}}\n                                  size=\"small\"\n                                  header={<div>All Items</div>}\n                                  bordered\n                                  dataSource={props.account.getOrderDetails(value.orderId)}\n                                  renderItem={item => (\n                                      <List.Item style={{borderWidth: \"1px\", borderStyle: \"solid\"}}>\n                                          <p>{item.name}</p>\n                                      </List.Item>\n                                  )}\n                              />\n                              <div>\n                                  <div style={{textAlign: \"center\", padding: \"0 0 1rem\"}}>\n                                      Total Cost: {computeCost(value)}\n                                  </div>\n                                  <Form\n                                        name=\"basic\"\n                                        onFinish={(values) => {\n                                            value.addAgent(values.agent);\n                                            // for (let i = 0;i<props.account.getOrderDetails(value.orderId).length;i++){\n                                            //     value.updateOrderStatus(2, props.account.getOrderDetails(value.orderId)[i])\n                                            // }\n                                            message.success(\"Agent Assigned\");\n                                        }}\n                                        onFinishFailed={onFinishFailed}\n                                        scrollToFirstError\n                                    >\n                                      <Form.Item\n                                        label=\"Input Agent: \"\n                                        name=\"agent\"\n                                        rules = {[\n                                            {\n                                                required: true,\n                                                message: \"Input Station to get Items List\",\n                                            }\n                                        ]}\n                                    >\n                                        <Select\n                                            showSearch\n                                            style={{ width: 200 }}\n                                            placeholder=\"Select an Agent: \"\n                                            optionFilterProp=\"children\"\n                                            filterOption={(input, option) =>\n                                              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                            }\n                                        >\n                                            {\n                                                props.account.getFreeAgents().map((agent, index) => (\n                                                    <Select.Option key={agent.getID()} value={agent.getID()}>{agent.getName()}</Select.Option>\n                                                ))\n                                            }\n                                        </Select>\n                                    </Form.Item>\n                                      <Form.Item>\n                                          <Button type=\"primary\" htmlType=\"submit\">Select Agent</Button>\n                                      </Form.Item>\n                                  </Form>\n                              </div>\n                        </Card>\n                    )\n                })\n            }\n        </div>\n    )\n}","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Restaurant/RestaurantMenuPage.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Passenger/PassengerOrderPage.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Passenger/PassengerHomePage.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Agent/AgentHomePage.js",["287"],"import React from 'react';\nimport styled from \"styled-components\"\nimport Colors from \"../../../Design/Colors\";\nimport {Col, Row, Avatar} from \"antd\";\nimport AvatarImage from \"../../../Img/avatar.png\";\nimport { UserOutlined } from '@ant-design/icons';\n\n\nexport default function AgentHomePage(props){\n    const colorStyles = {\n        headingColor: Colors.black,\n    }\n\n    const Heading = styled.h1`\n        font-size: 2rem;\n        font-weight: 600;\n        color: ${colorStyles.headingColor};\n    `\n\n    return(\n        <div className=\"agent-account-home\">\n            <Row>\n                <Col span={12}>\n                    <Avatar\n                        size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n                        icon={<UserOutlined/>}\n                    />\n                    <Heading>\n                        {props.account.getName()}\n                    </Heading>\n                </Col>\n            </Row>\n            <Row>\n\n            </Row>\n        </div>\n    )\n}\n","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Agent/AgentOrderPage.js",["288","289"],"import React from 'react';\nimport {Row, Col, Card, List} from \"antd\";\nimport styled from \"styled-components\";\nimport {Management} from \"../../../Logic/Management\";\nimport {Order} from \"../../../Logic/Order\";\n\n\n\nexport default function AgentOrderPage(props){\n    // let allotedOrder = props.account.getAllotedOrder();\n    let allotedOrder = props.account.getAllotedOrder();\n    let restaurant = Management.ApprovedRestaurants.get(props.account.restaurant);\n    // console.log(allotedOrder);\n    const MenuItem = styled.p`\n        font-weight: 600;\n        margin-left: 5rem\n    `\n\n    return(\n        <div className=\"agent-account-order\">\n            <Row>\n                <Col span={12}>\n                    <h1>Order Summary</h1>\n                </Col>\n            </Row>\n            <Row>\n                {\n                    allotedOrder &&\n                        <List\n                  size=\"large\"\n                  header={<h1 style={{fontSize: \"2rem\"}}>Order Id {allotedOrder.orderId}</h1>}\n                  bordered\n                  dataSource={restaurant.getOrderDetails(allotedOrder.orderId)}\n                  renderItem={item => (\n                      <List.Item style={{borderWidth: \"1px 0 1px 0\", borderStyle: \"solid\"}}>\n                          <Row style={{width: \"100%\", fontSize: \"1.3rem\"}}>\n                              <Col span={12}>\n                                  <MenuItem>{item.name}</MenuItem>\n                              </Col>\n                              <Col span={12}>\n                                  <p style={{float: \"right\", marginRight: \"5rem\"}}>Price: {item.price}Rs</p>\n                              </Col>\n                          </Row>\n                      </List.Item>\n                  )}\n                />\n                }\n                {\n                    !allotedOrder && <p>No Order Alloted</p>\n                }\n            </Row>\n        </div>\n    )\n}","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Management/ManagementStatsPage.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Management/ManagementRailwaysPage.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Management/ManagementHomePage.js",["290"],"import React from 'react';\nimport styled from \"styled-components\"\nimport Colors from \"../../../Design/Colors\";\nimport {Col, Row, Avatar} from \"antd\";\nimport AvatarImage from \"../../../Img/avatar.png\";\nimport { UserOutlined } from '@ant-design/icons';\n\n\nexport default function ManagementHomePage(props){\n    const colorStyles = {\n        headingColor: Colors.black,\n    }\n\n    const Heading = styled.h1`\n        font-size: 2rem;\n        font-weight: 600;\n        color: ${colorStyles.headingColor};\n    `\n\n    return(\n        <div className=\"agent-account-home\">\n            <Row>\n                <Col span={12}>\n                    <Avatar\n                        size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n                        icon={<UserOutlined/>}\n                    />\n                    <Heading>\n                        {props.name}\n                    </Heading>\n                </Col>\n            </Row>\n            <Row>\n\n            </Row>\n        </div>\n    )\n}","/home/sajal/SE/project_final/TGHM_final/src/Components/LogoutButton/LogoutButton.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Passenger/PassengerBookingPage.js",["291"],"import React, {useEffect} from 'react';\nimport {Button, Card, Col, Collapse, Row} from \"antd\";\nimport {func} from \"prop-types\";\n\nexport default function PassengerBookingPage(props){\n\n    const removeItem = (item) => {\n        let newOrderList = props.orderItems;\n        let index = newOrderList.indexOf(item);\n        if (index > -1) {\n            newOrderList.splice(index, 1);\n        }\n        props.setOrderItems(newOrderList);\n    }\n\n    const calculateCost = () => {\n        let cost = 0;\n        for (let i = 0; i<props.orderItems.length;i++){\n            cost += props.orderItems[i].price;\n        }\n        return cost;\n    }\n\n    useEffect(() => {\n\n    }, [props.orderlist])\n\n    console.log(props.orderItems);\n    return (\n        <div>\n            <Row>\n                <Col span={12}>\n                    <Card title=\"Cart\" className=\"cart-card\">\n                        <Collapse accordion>\n                            {\n                                props.orderItems.map(function (value, index){\n                                    return(\n                                        <Collapse.Panel key={index} header={value.name}>\n                                            <p>\n                                                Price: {value.price} <br/>\n                                                <Button onClick={() => {removeItem(value)}}>Remove from Cart</Button>\n                                            </p>\n                                        </Collapse.Panel>\n                                    )\n                                })\n                            }\n                        </Collapse>\n                    </Card>\n                </Col>\n                <Col span = {12}>\n                    <Card title=\"Booking Summary\" className=\"booking-card\">\n                        <p>\n                            Total Cost: {calculateCost()}\n                        </p>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Passenger/PassengerItemPage.js",["292"],"import React from 'react';\nimport {Database} from \"../../../Logic/Database\";\nimport {Management} from \"../../../Logic/Management\";\nimport {Time} from \"../../../Logic/Time\";\nimport {Button, Collapse, message} from \"antd\";\nimport {Item} from \"../../../Logic/Item\";\n\nexport default function PassengerItemPage(props){\n\n    let [mapD, mapP] = Database.getMenu(props.train, new Time(23, 59));\n\n    const handleClick = (item) => {\n        let newOrderList = props.orderItems;\n        newOrderList.push(item);\n        message.success(item.name + ' added to cart.');\n        props.setOrderItems(newOrderList);\n    }\n\n    const renderList = () => {\n        let rows = [];\n        console.log(mapD);\n        for (const [keys, values] of mapD.entries()){\n            rows.push(\n                <Collapse.Panel header={keys} key={keys}>\n                    <Collapse accordion>\n                        {\n                            values.map(function (item, index){\n                                let l = Management.ApprovedRestaurants.get(item.restaurant);\n                                let name;\n                                if (l){\n                                    name = l.getName();\n                                }\n                                else{\n                                    name = null;\n                                }\n                                return (\n                                    <Collapse.Panel key={index} header={item.name}>\n                                    <p>\n                                        Price: {item.price}<br/>\n                                        Restaurant: {name}<br/>\n                                        Expected Time of Delivery: {mapP.get(keys)[index].hour}:{mapP.get(keys)[index].min} <br />\n                                        <Button onClick={(e) => handleClick(item)}>Add to Cart</Button>\n                                    </p>\n                                </Collapse.Panel>\n                                )\n                            })\n                        }\n                    </Collapse>\n                </Collapse.Panel>\n            );\n        }\n        console.log(rows);\n        return rows;\n    }\n\n\n    return (\n        <div>\n            <Collapse accordion style={{margin: \"2rem\"}}>\n                {renderList()}\n            </Collapse>\n        </div>\n    )\n}","/home/sajal/SE/project_final/TGHM_final/src/Pages/DashBoardPages/Passenger/PassengerStationPage.js",[],"/home/sajal/SE/project_final/TGHM_final/src/Components/DashBoard/DashBoardCard.js",[],{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","severity":1,"message":"298","line":1,"column":16,"nodeType":"299","messageId":"300","endLine":1,"endColumn":24},{"ruleId":"297","severity":1,"message":"301","line":8,"column":9,"nodeType":"299","messageId":"300","endLine":8,"endColumn":17},{"ruleId":"297","severity":1,"message":"302","line":9,"column":9,"nodeType":"299","messageId":"300","endLine":9,"endColumn":19},{"ruleId":"303","severity":1,"message":"304","line":4,"column":10,"nodeType":"299","messageId":"300","endLine":4,"endColumn":21},{"ruleId":"303","severity":1,"message":"305","line":5,"column":10,"nodeType":"299","messageId":"300","endLine":5,"endColumn":14},{"ruleId":"303","severity":1,"message":"306","line":6,"column":10,"nodeType":"299","messageId":"300","endLine":6,"endColumn":14},{"ruleId":"303","severity":1,"message":"307","line":12,"column":10,"nodeType":"299","messageId":"300","endLine":12,"endColumn":18},{"ruleId":"303","severity":1,"message":"301","line":13,"column":10,"nodeType":"299","messageId":"300","endLine":13,"endColumn":18},{"ruleId":"303","severity":1,"message":"308","line":20,"column":9,"nodeType":"299","messageId":"300","endLine":20,"endColumn":11},{"ruleId":"303","severity":1,"message":"309","line":21,"column":9,"nodeType":"299","messageId":"300","endLine":21,"endColumn":11},{"ruleId":"303","severity":1,"message":"310","line":66,"column":9,"nodeType":"299","messageId":"300","endLine":66,"endColumn":11},{"ruleId":"303","severity":1,"message":"311","line":67,"column":9,"nodeType":"299","messageId":"300","endLine":67,"endColumn":11},{"ruleId":"303","severity":1,"message":"312","line":68,"column":9,"nodeType":"299","messageId":"300","endLine":68,"endColumn":11},{"ruleId":"303","severity":1,"message":"313","line":69,"column":9,"nodeType":"299","messageId":"300","endLine":69,"endColumn":11},{"ruleId":"303","severity":1,"message":"314","line":70,"column":9,"nodeType":"299","messageId":"300","endLine":70,"endColumn":11},{"ruleId":"303","severity":1,"message":"315","line":71,"column":9,"nodeType":"299","messageId":"300","endLine":71,"endColumn":11},{"ruleId":"303","severity":1,"message":"316","line":72,"column":9,"nodeType":"299","messageId":"300","endLine":72,"endColumn":11},{"ruleId":"293","replacedBy":"317"},{"ruleId":"295","replacedBy":"318"},{"ruleId":"297","severity":1,"message":"302","line":7,"column":9,"nodeType":"299","messageId":"300","endLine":7,"endColumn":19},{"ruleId":"297","severity":1,"message":"319","line":59,"column":11,"nodeType":"299","messageId":"300","endLine":59,"endColumn":24},{"ruleId":"297","severity":1,"message":"320","line":8,"column":9,"nodeType":"299","messageId":"300","endLine":8,"endColumn":17},{"ruleId":"297","severity":1,"message":"321","line":11,"column":7,"nodeType":"299","messageId":"300","endLine":11,"endColumn":18},{"ruleId":"322","severity":1,"message":"323","line":58,"column":19,"nodeType":"324","messageId":"325","endLine":58,"endColumn":21},{"ruleId":"303","severity":1,"message":"326","line":64,"column":5,"nodeType":"299","messageId":"300","endLine":64,"endColumn":6},{"ruleId":"303","severity":1,"message":"304","line":4,"column":10,"nodeType":"299","messageId":"300","endLine":4,"endColumn":21},{"ruleId":"303","severity":1,"message":"306","line":6,"column":10,"nodeType":"299","messageId":"300","endLine":6,"endColumn":14},{"ruleId":"303","severity":1,"message":"307","line":12,"column":10,"nodeType":"299","messageId":"300","endLine":12,"endColumn":18},{"ruleId":"303","severity":1,"message":"327","line":23,"column":7,"nodeType":"299","messageId":"300","endLine":23,"endColumn":19},{"ruleId":"303","severity":1,"message":"328","line":184,"column":29,"nodeType":"299","messageId":"300","endLine":184,"endColumn":30},{"ruleId":"322","severity":1,"message":"329","line":56,"column":26,"nodeType":"324","messageId":"325","endLine":56,"endColumn":28},{"ruleId":"303","severity":1,"message":"330","line":2,"column":48,"nodeType":"299","messageId":"300","endLine":2,"endColumn":56},{"ruleId":"322","severity":1,"message":"329","line":84,"column":26,"nodeType":"324","messageId":"325","endLine":84,"endColumn":28},{"ruleId":"322","severity":1,"message":"329","line":99,"column":26,"nodeType":"324","messageId":"325","endLine":99,"endColumn":28},{"ruleId":"322","severity":1,"message":"329","line":106,"column":26,"nodeType":"324","messageId":"325","endLine":106,"endColumn":28},{"ruleId":"322","severity":1,"message":"329","line":120,"column":17,"nodeType":"324","messageId":"325","endLine":120,"endColumn":19},{"ruleId":"303","severity":1,"message":"331","line":1,"column":9,"nodeType":"299","messageId":"300","endLine":1,"endColumn":14},{"ruleId":"303","severity":1,"message":"332","line":3,"column":9,"nodeType":"299","messageId":"300","endLine":3,"endColumn":20},{"ruleId":"303","severity":1,"message":"333","line":67,"column":21,"nodeType":"299","messageId":"300","endLine":67,"endColumn":22},{"ruleId":"322","severity":1,"message":"329","line":136,"column":64,"nodeType":"324","messageId":"325","endLine":136,"endColumn":66},{"ruleId":"322","severity":1,"message":"329","line":147,"column":40,"nodeType":"324","messageId":"325","endLine":147,"endColumn":42},{"ruleId":"322","severity":1,"message":"323","line":163,"column":78,"nodeType":"324","messageId":"325","endLine":163,"endColumn":80},{"ruleId":"322","severity":1,"message":"323","line":163,"column":113,"nodeType":"324","messageId":"325","endLine":163,"endColumn":115},{"ruleId":"334","severity":1,"message":"335","line":5,"column":5,"nodeType":"336","messageId":"337","endLine":6,"endColumn":6},{"ruleId":"303","severity":1,"message":"338","line":1,"column":10,"nodeType":"299","messageId":"300","endLine":1,"endColumn":18},{"ruleId":"303","severity":1,"message":"339","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":20},{"ruleId":"334","severity":1,"message":"335","line":6,"column":5,"nodeType":"336","messageId":"337","endLine":7,"endColumn":6},{"ruleId":"322","severity":1,"message":"329","line":13,"column":22,"nodeType":"324","messageId":"325","endLine":13,"endColumn":24},{"ruleId":"322","severity":1,"message":"329","line":28,"column":21,"nodeType":"324","messageId":"325","endLine":28,"endColumn":23},{"ruleId":"303","severity":1,"message":"339","line":2,"column":10,"nodeType":"299","messageId":"300","endLine":2,"endColumn":20},{"ruleId":"303","severity":1,"message":"340","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":14},{"ruleId":"297","severity":1,"message":"301","line":5,"column":9,"nodeType":"299","messageId":"300","endLine":5,"endColumn":17},{"ruleId":"297","severity":1,"message":"341","line":2,"column":8,"nodeType":"299","messageId":"300","endLine":2,"endColumn":21},{"ruleId":"297","severity":1,"message":"302","line":4,"column":9,"nodeType":"299","messageId":"300","endLine":4,"endColumn":19},{"ruleId":"297","severity":1,"message":"342","line":5,"column":8,"nodeType":"299","messageId":"300","endLine":5,"endColumn":19},{"ruleId":"297","severity":1,"message":"343","line":2,"column":19,"nodeType":"299","messageId":"300","endLine":2,"endColumn":23},{"ruleId":"297","severity":1,"message":"344","line":5,"column":9,"nodeType":"299","messageId":"300","endLine":5,"endColumn":14},{"ruleId":"297","severity":1,"message":"342","line":5,"column":8,"nodeType":"299","messageId":"300","endLine":5,"endColumn":19},{"ruleId":"297","severity":1,"message":"345","line":3,"column":9,"nodeType":"299","messageId":"300","endLine":3,"endColumn":13},{"ruleId":"297","severity":1,"message":"305","line":6,"column":9,"nodeType":"299","messageId":"300","endLine":6,"endColumn":13},"no-native-reassign",["346"],"no-negated-in-lhs",["347"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Database' is defined but never used.","'Management' is defined but never used.","@typescript-eslint/no-unused-vars","'AccountType' is defined but never used.","'Item' is defined but never used.","'Menu' is defined but never used.","'readFile' is defined but never used.","'c2' is assigned a value but never used.","'c3' is assigned a value but never used.","'a1' is assigned a value but never used.","'a2' is assigned a value but never used.","'a3' is assigned a value but never used.","'a4' is assigned a value but never used.","'a5' is assigned a value but never used.","'a6' is assigned a value but never used.","'a7' is assigned a value but never used.",["346"],["347"],"'CarouselStyle' is assigned a value but never used.","'Customer' is defined but never used.","'allAccounts' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'m' is assigned a value but never used.","'CircularJSON' is assigned a value but never used.","'x' is assigned a value but never used.","Expected '===' and instead saw '=='.","'FoodType' is defined but never used.","'Agent' is defined but never used.","'AgentStatus' is defined but never used.","'i' is assigned a value but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'readSync' is defined but never used.","'Restaurant' is defined but never used.","'Time' is defined but never used.","'DashBoardCard' is defined but never used.","'AvatarImage' is defined but never used.","'Card' is defined but never used.","'Order' is defined but never used.","'func' is defined but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\index.tsx":"1","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\reportWebVitals.js":"2","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\App.js":"3","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\MasterRouter.js":"4","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\addingData.ts":"5","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Management.ts":"6","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Hooks\\useToken.js":"7","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Login\\Login.js":"8","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Dashboard\\Dashboard.js":"9","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Database.ts":"10","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\Registration.js":"11","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Agent.ts":"12","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Customer.ts":"13","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Station.ts":"14","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Restaurant.ts":"15","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Train.ts":"16","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Time.ts":"17","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Order.ts":"18","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Account.ts":"19","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Enum.ts":"20","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\RegistrationRouter.js":"21","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Design\\Colors.js":"22","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\AgentDashRouter.js":"23","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\RestaurantDashRouter.js":"24","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\ManagementDashRouter.js":"25","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\PassengerDashRouter.js":"26","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\System.ts":"27","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\DashBoard\\DashBoard.js":"28","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Menu.ts":"29","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Item.ts":"30","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\PassengerForm.js":"31","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RestaurantForm.js":"32","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Agent\\AgentHomePage.js":"33","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantHomePage.js":"34","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantOrdersPage.js":"35","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Agent\\AgentOrderPage.js":"36","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantMenuPage.js":"37","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantAgentsPage.js":"38","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementHomePage.js":"39","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementStatsPage.js":"40","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerHomePage.js":"41","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerOrderPage.js":"42","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementRailwaysPage.js":"43","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\LogoutButton\\LogoutButton.js":"44","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RouteForm.js":"45","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\StationForm.js":"46","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerBookingPage.js":"47","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerItemPage.js":"48","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerStationPage.js":"49","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\AgentForm.js":"50","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RestaurantMenuForm.js":"51","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\DashBoard\\DashBoardCard.js":"52"},{"size":517,"mtime":1617433095650,"results":"53","hashOfConfig":"54"},{"size":375,"mtime":1617432552405,"results":"55","hashOfConfig":"54"},{"size":1115,"mtime":1618319504915,"results":"56","hashOfConfig":"54"},{"size":1809,"mtime":1618317971514,"results":"57","hashOfConfig":"54"},{"size":5022,"mtime":1618380086591,"results":"58","hashOfConfig":"54"},{"size":2646,"mtime":1618380086586,"results":"59","hashOfConfig":"54"},{"size":757,"mtime":1618308271032,"results":"60","hashOfConfig":"54"},{"size":8046,"mtime":1618317971525,"results":"61","hashOfConfig":"54"},{"size":4046,"mtime":1617647877590,"results":"62","hashOfConfig":"54"},{"size":8828,"mtime":1618380086583,"results":"63","hashOfConfig":"54"},{"size":2227,"mtime":1618317971530,"results":"64","hashOfConfig":"54"},{"size":2090,"mtime":1618380086582,"results":"65","hashOfConfig":"54"},{"size":2409,"mtime":1618380086583,"results":"66","hashOfConfig":"54"},{"size":1036,"mtime":1618380086588,"results":"67","hashOfConfig":"54"},{"size":4481,"mtime":1618380086588,"results":"68","hashOfConfig":"54"},{"size":1631,"mtime":1618380086590,"results":"69","hashOfConfig":"54"},{"size":1991,"mtime":1618380086589,"results":"70","hashOfConfig":"54"},{"size":6559,"mtime":1618380086587,"results":"71","hashOfConfig":"54"},{"size":892,"mtime":1618380086581,"results":"72","hashOfConfig":"54"},{"size":892,"mtime":1618380086584,"results":"73","hashOfConfig":"54"},{"size":864,"mtime":1618317971509,"results":"74","hashOfConfig":"54"},{"size":180,"mtime":1617604685451,"results":"75","hashOfConfig":"54"},{"size":848,"mtime":1617604685497,"results":"76","hashOfConfig":"54"},{"size":1370,"mtime":1617604685500,"results":"77","hashOfConfig":"54"},{"size":1142,"mtime":1617604685498,"results":"78","hashOfConfig":"54"},{"size":891,"mtime":1617604685500,"results":"79","hashOfConfig":"54"},{"size":135,"mtime":1618380086589,"results":"80","hashOfConfig":"54"},{"size":2322,"mtime":1617604685447,"results":"81","hashOfConfig":"54"},{"size":862,"mtime":1618380086586,"results":"82","hashOfConfig":"54"},{"size":436,"mtime":1618380086585,"results":"83","hashOfConfig":"54"},{"size":8237,"mtime":1618319643363,"results":"84","hashOfConfig":"54"},{"size":7481,"mtime":1617647877594,"results":"85","hashOfConfig":"54"},{"size":1042,"mtime":1617647877577,"results":"86","hashOfConfig":"54"},{"size":994,"mtime":1617604685489,"results":"87","hashOfConfig":"54"},{"size":4763,"mtime":1617647877589,"results":"88","hashOfConfig":"54"},{"size":1976,"mtime":1617647877579,"results":"89","hashOfConfig":"54"},{"size":1457,"mtime":1618324047076,"results":"90","hashOfConfig":"54"},{"size":1562,"mtime":1618323271564,"results":"91","hashOfConfig":"54"},{"size":1030,"mtime":1618321661024,"results":"92","hashOfConfig":"54"},{"size":133,"mtime":1617604685481,"results":"93","hashOfConfig":"54"},{"size":1201,"mtime":1617604685484,"results":"94","hashOfConfig":"54"},{"size":2565,"mtime":1617647877583,"results":"95","hashOfConfig":"54"},{"size":727,"mtime":1618322231418,"results":"96","hashOfConfig":"54"},{"size":416,"mtime":1617604685449,"results":"97","hashOfConfig":"54"},{"size":4049,"mtime":1618323428569,"results":"98","hashOfConfig":"54"},{"size":3036,"mtime":1618322071358,"results":"99","hashOfConfig":"54"},{"size":2061,"mtime":1617628992269,"results":"100","hashOfConfig":"54"},{"size":2423,"mtime":1617647877581,"results":"101","hashOfConfig":"54"},{"size":2953,"mtime":1617628378243,"results":"102","hashOfConfig":"54"},{"size":7904,"mtime":1618320848340,"results":"103","hashOfConfig":"54"},{"size":3618,"mtime":1618324062910,"results":"104","hashOfConfig":"54"},{"size":516,"mtime":1617432552392,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nx65xg",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\index.tsx",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\reportWebVitals.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\App.js",["210"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\MasterRouter.js",["211","212"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\addingData.ts",["213","214","215","216","217","218","219","220","221","222","223","224","225","226"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Management.ts",["227","228"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Hooks\\useToken.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Login\\Login.js",["229","230","231","232","233","234","235","236","237","238"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Dashboard\\Dashboard.js",["239","240"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Database.ts",["241","242","243","244","245","246"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\Registration.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Agent.ts",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Customer.ts",["247"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Station.ts",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Restaurant.ts",["248","249","250","251","252","253"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Train.ts",["254"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Time.ts",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Order.ts",["255","256","257","258","259","260","261","262"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Account.ts",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Enum.ts",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\RegistrationRouter.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Design\\Colors.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\AgentDashRouter.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\RestaurantDashRouter.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\ManagementDashRouter.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\PassengerDashRouter.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\System.ts",["263"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\DashBoard\\DashBoard.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Menu.ts",["264","265","266","267","268"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Item.ts",["269","270"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\PassengerForm.js",["271"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RestaurantForm.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Agent\\AgentHomePage.js",["272"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantHomePage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantOrdersPage.js",["273","274"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Agent\\AgentOrderPage.js",["275","276"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantMenuPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantAgentsPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementHomePage.js",["277"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementStatsPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerHomePage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerOrderPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementRailwaysPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\LogoutButton\\LogoutButton.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RouteForm.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\StationForm.js",["278","279"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerBookingPage.js",["280"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerItemPage.js",["281"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerStationPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\AgentForm.js",["282"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RestaurantMenuForm.js",["283","284","285"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\DashBoard\\DashBoardCard.js",[],{"ruleId":"286","severity":1,"message":"287","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":24},{"ruleId":"286","severity":1,"message":"287","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":24},{"ruleId":"286","severity":1,"message":"290","line":8,"column":9,"nodeType":"288","messageId":"289","endLine":8,"endColumn":17},{"ruleId":"291","severity":1,"message":"292","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":21},{"ruleId":"291","severity":1,"message":"293","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":14},{"ruleId":"291","severity":1,"message":"294","line":6,"column":10,"nodeType":"288","messageId":"289","endLine":6,"endColumn":14},{"ruleId":"291","severity":1,"message":"295","line":12,"column":10,"nodeType":"288","messageId":"289","endLine":12,"endColumn":18},{"ruleId":"291","severity":1,"message":"290","line":13,"column":10,"nodeType":"288","messageId":"289","endLine":13,"endColumn":18},{"ruleId":"291","severity":1,"message":"296","line":20,"column":9,"nodeType":"288","messageId":"289","endLine":20,"endColumn":11},{"ruleId":"291","severity":1,"message":"297","line":21,"column":9,"nodeType":"288","messageId":"289","endLine":21,"endColumn":11},{"ruleId":"291","severity":1,"message":"298","line":66,"column":9,"nodeType":"288","messageId":"289","endLine":66,"endColumn":11},{"ruleId":"291","severity":1,"message":"299","line":67,"column":9,"nodeType":"288","messageId":"289","endLine":67,"endColumn":11},{"ruleId":"291","severity":1,"message":"300","line":68,"column":9,"nodeType":"288","messageId":"289","endLine":68,"endColumn":11},{"ruleId":"291","severity":1,"message":"301","line":69,"column":9,"nodeType":"288","messageId":"289","endLine":69,"endColumn":11},{"ruleId":"291","severity":1,"message":"302","line":70,"column":9,"nodeType":"288","messageId":"289","endLine":70,"endColumn":11},{"ruleId":"291","severity":1,"message":"303","line":71,"column":9,"nodeType":"288","messageId":"289","endLine":71,"endColumn":11},{"ruleId":"291","severity":1,"message":"304","line":72,"column":9,"nodeType":"288","messageId":"289","endLine":72,"endColumn":11},{"ruleId":"305","severity":1,"message":"306","line":58,"column":19,"nodeType":"307","messageId":"308","endLine":58,"endColumn":21},{"ruleId":"291","severity":1,"message":"309","line":64,"column":5,"nodeType":"288","messageId":"289","endLine":64,"endColumn":6},{"ruleId":"286","severity":1,"message":"310","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"311","line":4,"column":9,"nodeType":"288","messageId":"289","endLine":4,"endColumn":15},{"ruleId":"286","severity":1,"message":"312","line":4,"column":33,"nodeType":"288","messageId":"289","endLine":4,"endColumn":41},{"ruleId":"286","severity":1,"message":"313","line":4,"column":43,"nodeType":"288","messageId":"289","endLine":4,"endColumn":47},{"ruleId":"286","severity":1,"message":"314","line":4,"column":49,"nodeType":"288","messageId":"289","endLine":4,"endColumn":54},{"ruleId":"286","severity":1,"message":"315","line":7,"column":9,"nodeType":"288","messageId":"289","endLine":7,"endColumn":19},{"ruleId":"286","severity":1,"message":"316","line":11,"column":8,"nodeType":"288","messageId":"289","endLine":11,"endColumn":11},{"ruleId":"286","severity":1,"message":"317","line":13,"column":8,"nodeType":"288","messageId":"289","endLine":13,"endColumn":11},{"ruleId":"286","severity":1,"message":"318","line":71,"column":11,"nodeType":"288","messageId":"289","endLine":71,"endColumn":25},{"ruleId":"286","severity":1,"message":"319","line":75,"column":11,"nodeType":"288","messageId":"289","endLine":75,"endColumn":24},{"ruleId":"286","severity":1,"message":"320","line":8,"column":9,"nodeType":"288","messageId":"289","endLine":8,"endColumn":17},{"ruleId":"286","severity":1,"message":"321","line":11,"column":7,"nodeType":"288","messageId":"289","endLine":11,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":21},{"ruleId":"291","severity":1,"message":"294","line":6,"column":10,"nodeType":"288","messageId":"289","endLine":6,"endColumn":14},{"ruleId":"291","severity":1,"message":"295","line":12,"column":10,"nodeType":"288","messageId":"289","endLine":12,"endColumn":18},{"ruleId":"291","severity":1,"message":"322","line":22,"column":7,"nodeType":"288","messageId":"289","endLine":22,"endColumn":9},{"ruleId":"291","severity":1,"message":"323","line":23,"column":7,"nodeType":"288","messageId":"289","endLine":23,"endColumn":19},{"ruleId":"291","severity":1,"message":"324","line":186,"column":29,"nodeType":"288","messageId":"289","endLine":186,"endColumn":30},{"ruleId":"305","severity":1,"message":"325","line":53,"column":26,"nodeType":"307","messageId":"308","endLine":53,"endColumn":28},{"ruleId":"305","severity":1,"message":"325","line":80,"column":26,"nodeType":"307","messageId":"308","endLine":80,"endColumn":28},{"ruleId":"291","severity":1,"message":"326","line":96,"column":17,"nodeType":"288","messageId":"289","endLine":96,"endColumn":30},{"ruleId":"327","severity":1,"message":"328","line":97,"column":39,"nodeType":"329","messageId":"330","endLine":97,"endColumn":52},{"ruleId":"305","severity":1,"message":"325","line":102,"column":26,"nodeType":"307","messageId":"308","endLine":102,"endColumn":28},{"ruleId":"305","severity":1,"message":"325","line":109,"column":26,"nodeType":"307","messageId":"308","endLine":109,"endColumn":28},{"ruleId":"305","severity":1,"message":"325","line":124,"column":17,"nodeType":"307","messageId":"308","endLine":124,"endColumn":19},{"ruleId":"291","severity":1,"message":"331","line":38,"column":13,"nodeType":"288","messageId":"289","endLine":38,"endColumn":14},{"ruleId":"291","severity":1,"message":"332","line":1,"column":9,"nodeType":"288","messageId":"289","endLine":1,"endColumn":14},{"ruleId":"291","severity":1,"message":"333","line":3,"column":9,"nodeType":"288","messageId":"289","endLine":3,"endColumn":20},{"ruleId":"291","severity":1,"message":"334","line":7,"column":9,"nodeType":"288","messageId":"289","endLine":7,"endColumn":16},{"ruleId":"291","severity":1,"message":"335","line":8,"column":9,"nodeType":"288","messageId":"289","endLine":8,"endColumn":14},{"ruleId":"291","severity":1,"message":"331","line":30,"column":17,"nodeType":"288","messageId":"289","endLine":30,"endColumn":18},{"ruleId":"291","severity":1,"message":"331","line":70,"column":21,"nodeType":"288","messageId":"289","endLine":70,"endColumn":22},{"ruleId":"305","severity":1,"message":"325","line":139,"column":64,"nodeType":"307","messageId":"308","endLine":139,"endColumn":66},{"ruleId":"305","severity":1,"message":"325","line":150,"column":40,"nodeType":"307","messageId":"308","endLine":150,"endColumn":42},{"ruleId":"336","severity":1,"message":"337","line":5,"column":5,"nodeType":"338","messageId":"339","endLine":6,"endColumn":6},{"ruleId":"291","severity":1,"message":"340","line":1,"column":10,"nodeType":"288","messageId":"289","endLine":1,"endColumn":18},{"ruleId":"291","severity":1,"message":"341","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":20},{"ruleId":"336","severity":1,"message":"337","line":6,"column":5,"nodeType":"338","messageId":"339","endLine":7,"endColumn":6},{"ruleId":"305","severity":1,"message":"325","line":13,"column":22,"nodeType":"307","messageId":"308","endLine":13,"endColumn":24},{"ruleId":"305","severity":1,"message":"325","line":28,"column":21,"nodeType":"307","messageId":"308","endLine":28,"endColumn":23},{"ruleId":"291","severity":1,"message":"341","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":20},{"ruleId":"291","severity":1,"message":"342","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":14},{"ruleId":"286","severity":1,"message":"290","line":5,"column":9,"nodeType":"288","messageId":"289","endLine":5,"endColumn":17},{"ruleId":"286","severity":1,"message":"343","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":19},{"ruleId":"286","severity":1,"message":"344","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":21},{"ruleId":"286","severity":1,"message":"315","line":4,"column":9,"nodeType":"288","messageId":"289","endLine":4,"endColumn":19},{"ruleId":"286","severity":1,"message":"345","line":2,"column":19,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"346","line":5,"column":9,"nodeType":"288","messageId":"289","endLine":5,"endColumn":14},{"ruleId":"286","severity":1,"message":"343","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":19},{"ruleId":"286","severity":1,"message":"347","line":2,"column":9,"nodeType":"288","messageId":"289","endLine":2,"endColumn":19},{"ruleId":"286","severity":1,"message":"332","line":4,"column":9,"nodeType":"288","messageId":"289","endLine":4,"endColumn":14},{"ruleId":"286","severity":1,"message":"348","line":3,"column":9,"nodeType":"288","messageId":"289","endLine":3,"endColumn":13},{"ruleId":"286","severity":1,"message":"293","line":6,"column":9,"nodeType":"288","messageId":"289","endLine":6,"endColumn":13},{"ruleId":"286","severity":1,"message":"349","line":13,"column":13,"nodeType":"288","messageId":"289","endLine":13,"endColumn":14},{"ruleId":"286","severity":1,"message":"347","line":2,"column":9,"nodeType":"288","messageId":"289","endLine":2,"endColumn":19},{"ruleId":"286","severity":1,"message":"311","line":2,"column":44,"nodeType":"288","messageId":"289","endLine":2,"endColumn":50},{"ruleId":"286","severity":1,"message":"315","line":4,"column":9,"nodeType":"288","messageId":"289","endLine":4,"endColumn":19},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Database' is defined but never used.","@typescript-eslint/no-unused-vars","'AccountType' is defined but never used.","'Item' is defined but never used.","'Menu' is defined but never used.","'readFile' is defined but never used.","'c2' is assigned a value but never used.","'c3' is assigned a value but never used.","'a1' is assigned a value but never used.","'a2' is assigned a value but never used.","'a3' is assigned a value but never used.","'a4' is assigned a value but never used.","'a5' is assigned a value but never used.","'a6' is assigned a value but never used.","'a7' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'m' is assigned a value but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Management' is defined but never used.","'Bg3' is defined but never used.","'Bg5' is defined but never used.","'onFinishFailed' is assigned a value but never used.","'CarouselStyle' is assigned a value but never used.","'Customer' is defined but never used.","'allAccounts' is assigned a value but never used.","'fs' is assigned a value but never used.","'CircularJSON' is assigned a value but never used.","'x' is assigned a value but never used.","Expected '===' and instead saw '=='.","'type' is assigned a value but never used.","@typescript-eslint/consistent-type-assertions","Use 'as any' instead of '<any>'.","TSTypeAssertion","as","'i' is assigned a value but never used.","'Agent' is defined but never used.","'AgentStatus' is defined but never used.","'Station' is defined but never used.","'Train' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'readSync' is defined but never used.","'Restaurant' is defined but never used.","'Time' is defined but never used.","'AvatarImage' is defined but never used.","'DashBoardCard' is defined but never used.","'Card' is defined but never used.","'Order' is defined but never used.","'DatePicker' is defined but never used.","'func' is defined but never used.","'a' is assigned a value but never used."]
>>>>>>> c9839472c444f6ec2829e00bb0169a884834f986
