[{"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\index.tsx":"1","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\reportWebVitals.js":"2","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\App.js":"3","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\MasterRouter.js":"4","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\addingData.ts":"5","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Management.ts":"6","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Hooks\\useToken.js":"7","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Login\\Login.js":"8","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Dashboard\\Dashboard.js":"9","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Database.ts":"10","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\Registration.js":"11","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Agent.ts":"12","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Customer.ts":"13","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Station.ts":"14","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Restaurant.ts":"15","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Train.ts":"16","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Time.ts":"17","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Order.ts":"18","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Account.ts":"19","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Enum.ts":"20","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\RegistrationRouter.js":"21","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Design\\Colors.js":"22","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\AgentDashRouter.js":"23","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\RestaurantDashRouter.js":"24","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\ManagementDashRouter.js":"25","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\PassengerDashRouter.js":"26","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\System.ts":"27","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\DashBoard\\DashBoard.js":"28","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Menu.ts":"29","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Item.ts":"30","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\PassengerForm.js":"31","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RestaurantForm.js":"32","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Agent\\AgentHomePage.js":"33","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantHomePage.js":"34","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantOrdersPage.js":"35","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Agent\\AgentOrderPage.js":"36","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantMenuPage.js":"37","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantAgentsPage.js":"38","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementHomePage.js":"39","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementStatsPage.js":"40","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerHomePage.js":"41","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerOrderPage.js":"42","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementRailwaysPage.js":"43","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\LogoutButton\\LogoutButton.js":"44","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RouteForm.js":"45","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\StationForm.js":"46","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerBookingPage.js":"47","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerItemPage.js":"48","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerStationPage.js":"49","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\AgentForm.js":"50","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RestaurantMenuForm.js":"51","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\DashBoard\\DashBoardCard.js":"52","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Location.ts":"53"},{"size":517,"mtime":1617433095650,"results":"54","hashOfConfig":"55"},{"size":375,"mtime":1617432552405,"results":"56","hashOfConfig":"55"},{"size":1501,"mtime":1618385390200,"results":"57","hashOfConfig":"55"},{"size":1769,"mtime":1618385390211,"results":"58","hashOfConfig":"55"},{"size":5164,"mtime":1618385411174,"results":"59","hashOfConfig":"55"},{"size":2534,"mtime":1618385390204,"results":"60","hashOfConfig":"55"},{"size":757,"mtime":1618381391115,"results":"61","hashOfConfig":"55"},{"size":8093,"mtime":1618385390209,"results":"62","hashOfConfig":"55"},{"size":4046,"mtime":1617647877590,"results":"63","hashOfConfig":"55"},{"size":8454,"mtime":1618385411188,"results":"64","hashOfConfig":"55"},{"size":2227,"mtime":1618381391261,"results":"65","hashOfConfig":"55"},{"size":2836,"mtime":1618385434527,"results":"66","hashOfConfig":"55"},{"size":2529,"mtime":1618385390202,"results":"67","hashOfConfig":"55"},{"size":1620,"mtime":1618385411073,"results":"68","hashOfConfig":"55"},{"size":5598,"mtime":1618385411181,"results":"69","hashOfConfig":"55"},{"size":1780,"mtime":1618385390205,"results":"70","hashOfConfig":"55"},{"size":1991,"mtime":1618380086589,"results":"71","hashOfConfig":"55"},{"size":6665,"mtime":1618381540806,"results":"72","hashOfConfig":"55"},{"size":974,"mtime":1618381540797,"results":"73","hashOfConfig":"55"},{"size":892,"mtime":1618380086584,"results":"74","hashOfConfig":"55"},{"size":864,"mtime":1618381391266,"results":"75","hashOfConfig":"55"},{"size":180,"mtime":1617604685451,"results":"76","hashOfConfig":"55"},{"size":848,"mtime":1617604685497,"results":"77","hashOfConfig":"55"},{"size":1370,"mtime":1617604685500,"results":"78","hashOfConfig":"55"},{"size":1142,"mtime":1617604685498,"results":"79","hashOfConfig":"55"},{"size":891,"mtime":1617604685500,"results":"80","hashOfConfig":"55"},{"size":135,"mtime":1618380086589,"results":"81","hashOfConfig":"55"},{"size":2322,"mtime":1617604685447,"results":"82","hashOfConfig":"55"},{"size":862,"mtime":1618380086586,"results":"83","hashOfConfig":"55"},{"size":436,"mtime":1618380086585,"results":"84","hashOfConfig":"55"},{"size":8579,"mtime":1618385390210,"results":"85","hashOfConfig":"55"},{"size":7481,"mtime":1617647877594,"results":"86","hashOfConfig":"55"},{"size":1042,"mtime":1617647877577,"results":"87","hashOfConfig":"55"},{"size":994,"mtime":1617604685489,"results":"88","hashOfConfig":"55"},{"size":4763,"mtime":1617647877589,"results":"89","hashOfConfig":"55"},{"size":1976,"mtime":1617647877579,"results":"90","hashOfConfig":"55"},{"size":1457,"mtime":1618381391256,"results":"91","hashOfConfig":"55"},{"size":1562,"mtime":1618381391255,"results":"92","hashOfConfig":"55"},{"size":1030,"mtime":1618381391249,"results":"93","hashOfConfig":"55"},{"size":133,"mtime":1617604685481,"results":"94","hashOfConfig":"55"},{"size":1201,"mtime":1617604685484,"results":"95","hashOfConfig":"55"},{"size":2565,"mtime":1618381391252,"results":"96","hashOfConfig":"55"},{"size":727,"mtime":1618381391250,"results":"97","hashOfConfig":"55"},{"size":416,"mtime":1617604685449,"results":"98","hashOfConfig":"55"},{"size":4049,"mtime":1618381391263,"results":"99","hashOfConfig":"55"},{"size":3036,"mtime":1618381391264,"results":"100","hashOfConfig":"55"},{"size":2061,"mtime":1617628992269,"results":"101","hashOfConfig":"55"},{"size":2423,"mtime":1617647877581,"results":"102","hashOfConfig":"55"},{"size":2953,"mtime":1617628378243,"results":"103","hashOfConfig":"55"},{"size":7904,"mtime":1618381391259,"results":"104","hashOfConfig":"55"},{"size":3618,"mtime":1618381391262,"results":"105","hashOfConfig":"55"},{"size":516,"mtime":1617432552392,"results":"106","hashOfConfig":"55"},{"size":210,"mtime":1618380086585,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"nx65xg",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"113"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"113"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"113"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"113"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"113"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"113"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"113"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"113"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"113"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"113"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\index.tsx",[],["231","232"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\reportWebVitals.js",[],["233","234"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\App.js",["235","236"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\MasterRouter.js",["237","238","239"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\addingData.ts",["240","241","242","243","244","245","246","247","248","249","250","251","252","253"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Management.ts",["254","255"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Hooks\\useToken.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Login\\Login.js",["256","257","258","259","260","261","262","263","264","265"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Dashboard\\Dashboard.js",["266","267"],"import React from 'react';\r\nimport DashBoard from \"../../Components/DashBoard/DashBoard\";\r\nimport AgentDashRouter from \"../../Routers/AccountDashRoutes/AgentDashRouter\";\r\nimport RestaurantDashRouter from \"../../Routers/AccountDashRoutes/RestaurantDashRouter\";\r\nimport ManagementDashRouter from \"../../Routers/AccountDashRoutes/ManagementDashRouter\";\r\nimport PassengerDashRouter from \"../../Routers/AccountDashRoutes/PassengerDashRouter\";\r\nimport {Management} from \"../../Logic/Management\";\r\nimport {Customer} from \"../../Logic/Customer\";\r\nimport {AccountType} from \"../../Logic/Enum\";\r\n\r\nconst allAccounts = [\r\n    {\r\n        id: 1,\r\n        name: \"David\",\r\n        type: \"\",\r\n        username: \"David123\",\r\n        password: \"123\",\r\n    },\r\n]\r\n\r\nconst AgentLinks = [\r\n    {link: \"/dashboard/\", item:\"Home\"},\r\n    {link: \"/dashboard/order\", item:\"Orders\"},\r\n]\r\n\r\nconst RestaurantLinks = [\r\n    {link: \"/dashboard/\", item:\"Home\"},\r\n    {link: \"/dashboard/orders\", item:\"Orders\"},\r\n    {link: \"/dashboard/menu\", item:\"Menu\"},\r\n    {link: \"/dashboard/agents\", item:\"Agents\"},\r\n]\r\n\r\nconst ManagementLinks = [\r\n    {link: \"/dashboard/\", item:\"Home\"},\r\n    {link: \"/dashboard/stats\", item:\"Statistics\"},\r\n    {link: \"/dashboard/railway\", item:\"Railways\"},\r\n]\r\n\r\nconst PassengerLinks = [\r\n    {link: \"/dashboard/\", item:\"Home\"},\r\n    {link: \"/dashboard/order\", item:\"Order\"}\r\n]\r\n\r\nexport default class Dashboard extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            account: {}\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        let tokenString = sessionStorage.getItem('token');\r\n        if (!tokenString){\r\n            tokenString = localStorage.getItem('token');\r\n        }\r\n        const userToken = JSON.parse(tokenString);\r\n        console.log(userToken);\r\n        if (userToken === \"manager\"){\r\n            this.setState({account: Management.getInstance()})\r\n        }\r\n        let l = Management.loginC.get(userToken);\r\n        console.log(l);\r\n        if (l !== undefined){\r\n            this.setState({account: l});\r\n        }\r\n        let r = Management.loginR.get(userToken);\r\n        console.log(r);\r\n        if (r !== undefined){\r\n            this.setState({account: r});\r\n        }\r\n        let a = Management.loginA.get(userToken);\r\n        if (a !== undefined){\r\n            this.setState({account: a});\r\n        }\r\n    };\r\n\r\n    renderDashBoard(){\r\n        if (this.state.account.getType() === AccountType.Agent){\r\n            return (\r\n                <DashBoard menu={AgentLinks}>\r\n                    <div style={{minHeight: \"90vh\"}}>\r\n                        <AgentDashRouter account = {this.state.account} />\r\n                    </div>\r\n                </DashBoard>\r\n            );\r\n        }\r\n        if (this.state.account.getType() === AccountType.Restaurant){\r\n            return (\r\n                <DashBoard menu={RestaurantLinks}>\r\n                    <div style={{minHeight: \"90vh\"}}>\r\n                        <RestaurantDashRouter account = {this.state.account} />\r\n                    </div>\r\n                </DashBoard>\r\n            );\r\n        }\r\n        if (this.state.account.getType() === AccountType.Management){\r\n            return (\r\n                <DashBoard menu={ManagementLinks}>\r\n                    <div style={{minHeight: \"90vh\"}}>\r\n                        <ManagementDashRouter account = {this.state.account} />\r\n                    </div>\r\n                </DashBoard>\r\n            )\r\n        }\r\n        if (this.state.account.getType() === AccountType.Customer){\r\n            return (\r\n                <DashBoard menu={PassengerLinks}>\r\n                    <div style={{minHeight: \"90vh\"}}>\r\n                        <PassengerDashRouter account = {this.state.account} />\r\n                    </div>\r\n                </DashBoard>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        console.log(this.state);\r\n        return(\r\n            <div>\r\n                {this.renderDashBoard()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Database.ts",["268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\Registration.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Agent.ts",["286"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Customer.ts",["287"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Station.ts",["288"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Restaurant.ts",["289","290","291","292","293","294","295"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Train.ts",["296","297"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Time.ts",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Order.ts",["298","299","300","301","302","303","304","305"],"import {Agent} from \"./Agent\";\r\nimport {Customer} from \"./Customer\";\r\nimport {AgentStatus, OrderStatus} from \"./Enum\";\r\nimport { Item } from \"./Item\";\r\nimport { Management } from \"./Management\";\r\nimport {Restaurant} from \"./Restaurant\";\r\nimport {Station} from \"./Station\";\r\nimport {Train} from \"./Train\";\r\nimport {Time} from \"./Time\";\r\n\r\nexport class Order{\r\n    static unique =0;\r\n    private __customer:Customer;\r\n    Order_Status:Array<string> = [];\r\n    private __agent: Array<number> = [];\r\n    private __seatNumber: string;\r\n    private __train: number;\r\n    private __deliveryStation: number|null;\r\n    private __selectedItems : Array<Item> = [];\r\n    private __Restaurants = new Set<Restaurant>();\r\n    __OrderTime : Time;\r\n    orderId;\r\n    constructor(customer:Customer,status:number=0,items:Array<Item>,seat_Number:string,train:number, delivery_station:number|null = null){\r\n        this.__customer=customer;\r\n        customer.addOrder(this);\r\n        this.__seatNumber=seat_Number;\r\n        this.__train=train;\r\n        this.__deliveryStation=delivery_station;\r\n        this.__selectedItems=items;\r\n        for(let i in items){\r\n            this.Order_Status.push(OrderStatus[0]);\r\n        }\r\n        this.__OrderTime = Time.getCurrentTime();\r\n        this.orderId = Order.unique++;\r\n        customer.addOrder(this);\r\n        let m = Management.getInstance();\r\n        for(let i of items){\r\n            let x  = m.ApprovedRestaurants.get(i.restaurant);\r\n            if(x)\r\n            this.__Restaurants.add(x);\r\n        }\r\n    }\r\n\r\n    setDeliveryStation(station : number){\r\n        this.__deliveryStation = station;\r\n    }\r\n\r\n    addAgent(Agent : number){\r\n        this.__agent.push(Agent);\r\n    }\r\n\r\n    addItem(Item : Item){\r\n        this.__selectedItems.push(Item);\r\n        let m = Management.getInstance();\r\n        let ar=m.ApprovedRestaurants.get(Item.restaurant);\r\n        if(ar){\r\n        this.__Restaurants.add(ar);\r\n        }\r\n        this.Order_Status.push(OrderStatus[0]);\r\n    }\r\n\r\n    Track_Order(){\r\n        return this.Order_Status;\r\n    }\r\n\r\n    updateOrderStatus(status:number, Item : Item|null = null){\r\n        switch (status){\r\n            case 0:\r\n                break;\r\n            case 1:\r\n                for(let i of this.Order_Status)\r\n                    i=OrderStatus[status];\r\n                for(let i of Array.from(this.__Restaurants)){\r\n                    i.orderlist.push(this);\r\n                }\r\n                break;\r\n            case 2:\r\n                if(Item!=null){\r\n                    let index = this.__selectedItems.indexOf(Item);\r\n                    this.Order_Status[index] = OrderStatus[index];\r\n                }\r\n                break;\r\n            case 3:\r\n                if(Item!=null){\r\n                    let index = this.__selectedItems.indexOf(Item);\r\n                    this.Order_Status[index] = OrderStatus[index];\r\n                }\r\n                break;\r\n            case 4:\r\n                if(Item!=null){\r\n                    let index = this.__selectedItems.indexOf(Item);\r\n                    this.Order_Status[index] = OrderStatus[index];\r\n                }\r\n                break;\r\n            case 5:\r\n                if(Item!=null){\r\n                    let index = this.__selectedItems.indexOf(Item);\r\n                    this.Order_Status[index] = OrderStatus[index];\r\n                }\r\n                break;\r\n            case 6:\r\n                if(Item!=null){\r\n                    let index = this.__selectedItems.indexOf(Item);\r\n                    this.Order_Status[index] = OrderStatus[index];\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    getCustomer(){\r\n        return this.__customer;\r\n    }\r\n\r\n    getAgent(){\r\n        return this.__agent;\r\n    }\r\n\r\n    getSeatNumber(){\r\n        return this.__seatNumber;\r\n    }\r\n\r\n    getTrain(){\r\n        return this.__train;\r\n    }\r\n\r\n    getDeliveryStation(){\r\n        return this.__deliveryStation;\r\n    }\r\n\r\n    getItems(){\r\n        return this.__selectedItems;\r\n    }\r\n\r\n    getReciept(){\r\n        return this.orderId;\r\n    }\r\n\r\n    getItemList(Restaurant : Restaurant) : Array<Item>{\r\n        let x = [];\r\n        for(let i of this.__selectedItems){\r\n            let m = Management.getInstance();\r\n            if(m.ApprovedRestaurants.get(i.restaurant)==Restaurant){\r\n                x.push(i);\r\n            }\r\n        }\r\n        return x;\r\n    }\r\n\r\n    getOrderStatus() : [Array<Item>, Array<string>]{\r\n        if(!this.__OrderTime.sum(new Time(0,15)).lessThanEqual(Time.getCurrentTime())){\r\n            let j=0;\r\n            for(let i of this.__selectedItems){\r\n                if(this.Order_Status[j]==OrderStatus[1]){\r\n                    this.updateOrderStatus(3,i);\r\n                }\r\n            }\r\n        }\r\n        return [this.__selectedItems,this.Order_Status];\r\n    }\r\n    //getOrderStations(Restaurant : Restaurant) : Array<Station>{\r\n    //    let list = new Set<Station>();\r\n    //    let route = this.__train.Return_RouteStation();\r\n    //    let time = this.__train.Return_RouteTime();\r\n    //    for (let i of Array.from(route.keys())){\r\n    //        if(time.get(i)?.lessThanEqual(Time.getCurrentTime())){\r\n    //            for(let k of this.__selectedItems){\r\n    //                let temp = route.get(i);\r\n    //                if(temp)\r\n    //                if(Management.stationList.get(temp)?.getItem().indexOf(k)!=-1 && Restaurant.getPrice(k.name)!=-1){\r\n    //                    let temp2 = Management.stationList.get(temp);\r\n    //                    if(temp2)\r\n    //                    list.add(temp2);\r\n    //                }\r\n    //            }\r\n    //        }\r\n    //    }\r\n    //    return Array.from(list);\r\n    //}\r\n    static readOrder(order : Order,customer : Customer){\r\n        let x = new Order(customer,0,new Array<Item>(),order[\"__seatNumber\"],order[\"__train\"]);\r\n        for(let i of order[\"__selectedItems\"])\r\n            x.addItem(Object.setPrototypeOf(i, Item.prototype));\r\n            x.__OrderTime = Object.setPrototypeOf(order[\"__OrderTime\"], Time.prototype);\r\n            x.Order_Status = order[\"Order_Status\"];\r\n            x.__agent = order[\"__agent\"];\r\n            x.orderId = order[\"orderId\"];\r\n            x.__deliveryStation = order[\"__deliveryStation\"];  \r\n            Customer.unique = Math.max(Customer.unique,order[\"orderId\"]+1);\r\n    }\r\n\r\n}\r\n// var c= new Customer(\"a\",\"B\",\"C\",\"d\");\r\n// var n= new Agent();\r\n// var m=new Map();\r\n// m.set(\"!1\",\"Try\");\r\n// var t=new Train(\"train\",m);\r\n// var s=new Station(\"asdd\");\r\n// var item=[\"x\",\"y\",\"z\"];\r\n// var o= new Order(c,1,n,\"a11\",t,s,item);\r\n// console.log(o.Track_Order());\r\n","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Account.ts",["306"],"import {AccountType} from \"./Enum\";\r\n\r\nexport class Account{\r\n    static unique = 0;  \r\n    protected _ID;\r\n    protected _name;\r\n    protected _type;\r\n    protected _openDate;\r\n    protected _password;\r\n    protected _username;\r\n    constructor(name:string,username:string,Date:Date,Type:AccountType,Password:string, ID:number = -1){\r\n        if(ID==-1)\r\n            this._ID = Account.unique++;\r\n        else\r\n            this._ID = ID;\r\n        this._name = name;\r\n        this._type = Type;\r\n        this._username = username;\r\n        this._openDate = Date;\r\n        this._password = Password;\r\n    }\r\n    getID(){\r\n        return this._ID;\r\n    }\r\n    getType(){\r\n        return this._type;\r\n    }\r\n    getName(){\r\n        return this._name;\r\n    }\r\n    getOpenDate(){\r\n        return this._openDate;\r\n    }\r\n    checkPassword(password:string):boolean{\r\n        return (this._password === password);\r\n    }\r\n    getUsername(){\r\n        return this._username;\r\n    }\r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Enum.ts",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\RegistrationRouter.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Design\\Colors.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\AgentDashRouter.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\RestaurantDashRouter.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\ManagementDashRouter.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Routers\\AccountDashRoutes\\PassengerDashRouter.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\System.ts",["307"],"import {Agent} from \"./Agent\";\r\n\r\nexport class System{\r\n    static active_agent: Array<Agent> = [];\r\n    constructor(){\r\n    }\r\n    \r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\DashBoard\\DashBoard.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Menu.ts",["308","309","310","311","312"],"import { readSync } from \"node:fs\";\r\nimport {Item} from \"./Item\"\r\nimport { Restaurant } from \"./Restaurant\";\r\nexport class Menu{\r\n    private __Items : Array<Item> = [];\r\n    constructor(){\r\n    }\r\n    getMenuItems(){\r\n        return this.__Items;\r\n    }\r\n    getPrice(s:string){\r\n        for (let i of this.__Items){\r\n            if(i.name==s){\r\n                return i.price;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    addItem(Item : Item){\r\n        this.__Items.push(Item);\r\n    }\r\n    addItembyName(name:string , price:number, type: number, restaurant : number){\r\n        let item = new Item(name, price, type,restaurant);\r\n        this.__Items.push(item);\r\n    }\r\n    removeItem(item: Item){\r\n        this.__Items.forEach((value,index)=>{\r\n            if(value==item) this.__Items.splice(index,1);\r\n            return;\r\n        });\r\n    }\r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Item.ts",["313","314"],"import {FoodType} from \"./Enum\"\r\nimport { Restaurant } from \"./Restaurant\";\r\nimport { Time } from \"./Time\";\r\nexport class Item{\r\n    name: string;\r\n    price: number;\r\n    type : string;\r\n    restaurant : number;\r\n    constructor(name : string,price : number,type : number,restaurant : number){\r\n        this.name = name;\r\n        this.price = price;\r\n        this.type = FoodType[type];\r\n        this.restaurant = restaurant;\r\n    }\r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\PassengerForm.js",["315","316","317"],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RestaurantForm.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Agent\\AgentHomePage.js",["318"],"import React from 'react';\r\nimport styled from \"styled-components\"\r\nimport Colors from \"../../../Design/Colors\";\r\nimport {Col, Row, Avatar} from \"antd\";\r\nimport AvatarImage from \"../../../Img/avatar.png\";\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\n\r\nexport default function AgentHomePage(props){\r\n    const colorStyles = {\r\n        headingColor: Colors.black,\r\n    }\r\n\r\n    const Heading = styled.h1`\r\n        font-size: 2rem;\r\n        font-weight: 600;\r\n        color: ${colorStyles.headingColor};\r\n    `\r\n\r\n    return(\r\n        <div className=\"agent-account-home\">\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Avatar\r\n                        size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\r\n                        icon={<UserOutlined/>}\r\n                    />\r\n                    <Heading>\r\n                        {props.account.getName()}\r\n                    </Heading>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantHomePage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantOrdersPage.js",["319","320"],"import React from 'react';\r\nimport DashBoardCard from \"../../../Components/DashBoard/DashBoardCard\";\r\nimport {Button, Card, Form, List, message, Select} from \"antd\";\r\nimport {Management} from \"../../../Logic/Management\";\r\n\r\nexport default function RestaurantOrderPage(props){\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed: ',errorInfo);\r\n    }\r\n\r\n    const computeCost = (order) => {\r\n        let cost = 0;\r\n        for (let i = 0;i<props.account.getOrderDetails(order.orderId).length;i++){\r\n            cost += props.account.getOrderDetails(order.orderId)[i].price;\r\n        }\r\n        return cost;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.account.orderlist.map(function(value, index){\r\n                    console.log(value);\r\n                    return (\r\n                        <Card title={\"Order ID \" + value.orderId} style={{ minWidth: \"2rem\", maxWidth:\"32%\" }}>\r\n                              <List\r\n                                  style={{margin: \"1rem\"}}\r\n                                  size=\"small\"\r\n                                  header={<div>All Items</div>}\r\n                                  bordered\r\n                                  dataSource={props.account.getOrderDetails(value.orderId)}\r\n                                  renderItem={item => (\r\n                                      <List.Item style={{borderWidth: \"1px\", borderStyle: \"solid\"}}>\r\n                                          <p>{item.name}</p>\r\n                                      </List.Item>\r\n                                  )}\r\n                              />\r\n                              <div>\r\n                                  <div style={{textAlign: \"center\", padding: \"0 0 1rem\"}}>\r\n                                      Total Cost: {computeCost(value)}\r\n                                  </div>\r\n                                  <Form\r\n                                        name=\"basic\"\r\n                                        onFinish={(values) => {\r\n                                            value.addAgent(values.agent);\r\n                                            // for (let i = 0;i<props.account.getOrderDetails(value.orderId).length;i++){\r\n                                            //     value.updateOrderStatus(2, props.account.getOrderDetails(value.orderId)[i])\r\n                                            // }\r\n                                            message.success(\"Agent Assigned\");\r\n                                        }}\r\n                                        onFinishFailed={onFinishFailed}\r\n                                        scrollToFirstError\r\n                                    >\r\n                                      <Form.Item\r\n                                        label=\"Input Agent: \"\r\n                                        name=\"agent\"\r\n                                        rules = {[\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"Input Station to get Items List\",\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <Select\r\n                                            showSearch\r\n                                            style={{ width: 200 }}\r\n                                            placeholder=\"Select an Agent: \"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {\r\n                                                props.account.getFreeAgents().map((agent, index) => (\r\n                                                    <Select.Option key={agent.getID()} value={agent.getID()}>{agent.getName()}</Select.Option>\r\n                                                ))\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                      <Form.Item>\r\n                                          <Button type=\"primary\" htmlType=\"submit\">Select Agent</Button>\r\n                                      </Form.Item>\r\n                                  </Form>\r\n                              </div>\r\n                        </Card>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Agent\\AgentOrderPage.js",["321","322"],"import React from 'react';\r\nimport {Row, Col, Card, List} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport {Management} from \"../../../Logic/Management\";\r\nimport {Order} from \"../../../Logic/Order\";\r\n\r\n\r\n\r\nexport default function AgentOrderPage(props){\r\n    // let allotedOrder = props.account.getAllotedOrder();\r\n    let allotedOrder = props.account.getAllotedOrder();\r\n    let restaurant = Management.ApprovedRestaurants.get(props.account.restaurant);\r\n    // console.log(allotedOrder);\r\n    const MenuItem = styled.p`\r\n        font-weight: 600;\r\n        margin-left: 5rem\r\n    `\r\n\r\n    return(\r\n        <div className=\"agent-account-order\">\r\n            <Row>\r\n                <Col span={12}>\r\n                    <h1>Order Summary</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {\r\n                    allotedOrder &&\r\n                        <List\r\n                  size=\"large\"\r\n                  header={<h1 style={{fontSize: \"2rem\"}}>Order Id {allotedOrder.orderId}</h1>}\r\n                  bordered\r\n                  dataSource={restaurant.getOrderDetails(allotedOrder.orderId)}\r\n                  renderItem={item => (\r\n                      <List.Item style={{borderWidth: \"1px 0 1px 0\", borderStyle: \"solid\"}}>\r\n                          <Row style={{width: \"100%\", fontSize: \"1.3rem\"}}>\r\n                              <Col span={12}>\r\n                                  <MenuItem>{item.name}</MenuItem>\r\n                              </Col>\r\n                              <Col span={12}>\r\n                                  <p style={{float: \"right\", marginRight: \"5rem\"}}>Price: {item.price}Rs</p>\r\n                              </Col>\r\n                          </Row>\r\n                      </List.Item>\r\n                  )}\r\n                />\r\n                }\r\n                {\r\n                    !allotedOrder && <p>No Order Alloted</p>\r\n                }\r\n            </Row>\r\n        </div>\r\n    )\r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantMenuPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Restaurant\\RestaurantAgentsPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementHomePage.js",["323"],"import React from 'react';\r\nimport styled from \"styled-components\"\r\nimport Colors from \"../../../Design/Colors\";\r\nimport {Col, Row, Avatar} from \"antd\";\r\nimport AvatarImage from \"../../../Img/avatar.png\";\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\n\r\nexport default function ManagementHomePage(props){\r\n    const colorStyles = {\r\n        headingColor: Colors.black,\r\n    }\r\n\r\n    const Heading = styled.h1`\r\n        font-size: 2rem;\r\n        font-weight: 600;\r\n        color: ${colorStyles.headingColor};\r\n    `\r\n\r\n    return(\r\n        <div className=\"agent-account-home\">\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Avatar\r\n                        size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\r\n                        icon={<UserOutlined/>}\r\n                    />\r\n                    <Heading>\r\n                        Management\r\n                    </Heading>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n\r\n            </Row>\r\n        </div>\r\n    )\r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementStatsPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerHomePage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerOrderPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Management\\ManagementRailwaysPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\LogoutButton\\LogoutButton.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RouteForm.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\StationForm.js",["324","325"],"import React from 'react';\r\nimport {DatePicker, Col, Form, Input, Row, Button, message} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport {Agent} from \"../../Logic/Agent\";\r\n\r\nexport default function AgentForm({restaurant}){\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed: ',errorInfo);\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        // Function to Add Station\r\n\r\n        message.success(\"Station Created\");\r\n    }\r\n\r\n    const HeadingStyled = styled.h2`\r\n        font-size: 1.5rem;\r\n        font-weight: 600;\r\n    `\r\n\r\n    return (\r\n        <div>\r\n            <HeadingStyled>Fill in the form to add a Station</HeadingStyled>\r\n            <Form\r\n                name=\"basic\"\r\n                onFinish={handleSubmit}\r\n                onFinishFailed={onFinishFailed}\r\n                scrollToFirstError\r\n            >\r\n                <Row style={{width: \"100%\"}}>\r\n                    <Col span={24}>\r\n                        <Form.Item\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Name required\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{width: \"100%\"}}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"Captcha\"\r\n                            extra=\"We make sure that you are human\"\r\n                        >\r\n                            <Row gutter={8}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name=\"captcha\"\r\n                                        noStyle\r\n                                        rules={[\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Button>Get Captcha</Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={5}>\r\n                                    <Form.Item >\r\n                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerBookingPage.js",["326"],"import React, {useEffect} from 'react';\r\nimport {Button, Card, Col, Collapse, Row} from \"antd\";\r\nimport {func} from \"prop-types\";\r\n\r\nexport default function PassengerBookingPage(props){\r\n\r\n    const removeItem = (item) => {\r\n        let newOrderList = props.orderItems;\r\n        let index = newOrderList.indexOf(item);\r\n        if (index > -1) {\r\n            newOrderList.splice(index, 1);\r\n        }\r\n        props.setOrderItems(newOrderList);\r\n    }\r\n\r\n    const calculateCost = () => {\r\n        let cost = 0;\r\n        for (let i = 0; i<props.orderItems.length;i++){\r\n            cost += props.orderItems[i].price;\r\n        }\r\n        return cost;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [props.orderlist])\r\n\r\n    console.log(props.orderItems);\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Card title=\"Cart\" className=\"cart-card\">\r\n                        <Collapse accordion>\r\n                            {\r\n                                props.orderItems.map(function (value, index){\r\n                                    return(\r\n                                        <Collapse.Panel key={index} header={value.name}>\r\n                                            <p>\r\n                                                Price: {value.price} <br/>\r\n                                                <Button onClick={() => {removeItem(value)}}>Remove from Cart</Button>\r\n                                            </p>\r\n                                        </Collapse.Panel>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Collapse>\r\n                    </Card>\r\n                </Col>\r\n                <Col span = {12}>\r\n                    <Card title=\"Booking Summary\" className=\"booking-card\">\r\n                        <p>\r\n                            Total Cost: {calculateCost()}\r\n                        </p>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerItemPage.js",["327"],"import React from 'react';\r\nimport {Database} from \"../../../Logic/Database\";\r\nimport {Management} from \"../../../Logic/Management\";\r\nimport {Time} from \"../../../Logic/Time\";\r\nimport {Button, Collapse, message} from \"antd\";\r\nimport {Item} from \"../../../Logic/Item\";\r\n\r\nexport default function PassengerItemPage(props){\r\n\r\n    let [mapD, mapP] = Database.getMenu(props.train, new Time(23, 59));\r\n\r\n    const handleClick = (item) => {\r\n        let newOrderList = props.orderItems;\r\n        newOrderList.push(item);\r\n        message.success(item.name + ' added to cart.');\r\n        props.setOrderItems(newOrderList);\r\n    }\r\n\r\n    const renderList = () => {\r\n        let rows = [];\r\n        console.log(mapD);\r\n        for (const [keys, values] of mapD.entries()){\r\n            rows.push(\r\n                <Collapse.Panel header={keys} key={keys}>\r\n                    <Collapse accordion>\r\n                        {\r\n                            values.map(function (item, index){\r\n                                let l = Management.ApprovedRestaurants.get(item.restaurant);\r\n                                let name;\r\n                                if (l){\r\n                                    name = l.getName();\r\n                                }\r\n                                else{\r\n                                    name = null;\r\n                                }\r\n                                return (\r\n                                    <Collapse.Panel key={index} header={item.name}>\r\n                                    <p>\r\n                                        Price: {item.price}<br/>\r\n                                        Restaurant: {name}<br/>\r\n                                        Expected Time of Delivery: {mapP.get(keys)[index].hour}:{mapP.get(keys)[index].min} <br />\r\n                                        <Button onClick={(e) => handleClick(item)}>Add to Cart</Button>\r\n                                    </p>\r\n                                </Collapse.Panel>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Collapse>\r\n                </Collapse.Panel>\r\n            );\r\n        }\r\n        console.log(rows);\r\n        return rows;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse accordion style={{margin: \"2rem\"}}>\r\n                {renderList()}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\DashBoardPages\\Passenger\\PassengerStationPage.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\AgentForm.js",["328"],"import React from 'react';\r\nimport {DatePicker, Col, Form, Input, Row, Button, message} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport {Agent} from \"../../Logic/Agent\";\r\n\r\nexport default function AgentForm({restaurant}){\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed: ',errorInfo);\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        let a = new Agent(values.firstname + \" \" + values.lastname, values.username, values.password, restaurant, null, null);\r\n        message.success(\"Agent Created\");\r\n    }\r\n\r\n    const HeadingStyled = styled.h2`\r\n        text-align: center;\r\n        font-size: 1.5rem;\r\n        font-weight: 600;\r\n    `\r\n\r\n    return (\r\n        <div>\r\n            <HeadingStyled>Fill in the form to sign up as Agent</HeadingStyled>\r\n            <Form\r\n                name=\"basic\"\r\n                onFinish={handleSubmit}\r\n                onFinishFailed={onFinishFailed}\r\n                scrollToFirstError\r\n            >\r\n                <Row style={{width: \"100%\"}}>\r\n                    <Col span={24}>\r\n                        <Form.Item\r\n                            label=\"First Name\"\r\n                            name=\"firstName\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Name required\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{width: \"100%\"}}>\r\n                    <Col span={24}>\r\n                        <Form.Item\r\n                            label=\"Last Name: \"\r\n                            name=\"lastName\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Name required\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{width:\"100%\"}}>\r\n                    <Col span={24}>\r\n                        <Form.Item\r\n                            label=\"E-mail\"\r\n                            name=\"email\"\r\n                            rules={[\r\n                                {\r\n                                    type: 'email',\r\n                                    message: 'The input is not valid Email',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{width: \"100%\"}}>\r\n                    <Col span={24}>\r\n                        <Form.Item\r\n                            label=\"Enter Username: \"\r\n                            name=\"username\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Username needed\",\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"Enter Password: \"\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Password needed\",\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"Confirm Password: \"\r\n                            name=\"confirm\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please confirm password'\r\n                                },\r\n                                ({ getFieldValue }) => ({\r\n                                    validator(_, value){\r\n                                        if (!value || getFieldValue('password') === value){\r\n                                            return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject(new Error(\"Passwords don't match\"))\r\n                                    }\r\n                                })\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{width: \"100%\"}}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"Phone Number: \"\r\n                            name=\"phoneNo\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Phone Number required\",\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6} offset={3} style={{objectAlign: \"center\"}}>\r\n                        <Form.Item\r\n                            label=\"Date of Birth: \"\r\n                            name=\"dob\"\r\n                            rules={[\r\n                            ]}\r\n                        >\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{width: \"100%\"}}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"Captcha\"\r\n                            extra=\"We make sure that you are human\"\r\n                        >\r\n                            <Row gutter={8}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name=\"captcha\"\r\n                                        noStyle\r\n                                        rules={[\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Button>Get Captcha</Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={5}>\r\n                                    <Form.Item >\r\n                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Pages\\Registration\\RestaurantMenuForm.js",["329","330","331"],"import React from 'react';\r\nimport {DatePicker, Col, Form, Input, Row, Button, message, InputNumber, Select} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport {Management} from \"../../Logic/Management\";\r\nimport {FoodType} from \"../../Logic/Enum\";\r\n\r\nexport default function RestaurantMenuForm(){\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed: ',errorInfo);\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        // Function to Add Station\r\n\r\n        message.success(\"Item Created\");\r\n    }\r\n\r\n    const HeadingStyled = styled.h2`\r\n        font-size: 1.5rem;\r\n        font-weight: 600;\r\n    `\r\n    const StringIsNotNumber = value => isNaN(Number(value)) === true;\r\n\r\n    return (\r\n        <div>\r\n            <HeadingStyled>Fill in the form to add an Item</HeadingStyled>\r\n            <Form\r\n                name=\"basic\"\r\n                onFinish={handleSubmit}\r\n                onFinishFailed={onFinishFailed}\r\n                scrollToFirstError\r\n            >\r\n                <Row style={{width: \"100%\"}}>\r\n                    <Col span={24}>\r\n                        <Form.Item\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Name required\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{width: \"100%\"}}>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            label=\"Price\"\r\n                            name=\"price\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Price required\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <InputNumber />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Name required\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Select\r\n                                showSearch\r\n                                style={{ width: 200 }}\r\n                                placeholder=\"Select an Item type\"\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                  option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                            {\r\n                                Object.keys(FoodType).filter(StringIsNotNumber).map((type, index) => (\r\n                                    <Select.Option value={index} key={index}>{type}</Select.Option>\r\n                                ))\r\n                            }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}","C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Components\\DashBoard\\DashBoardCard.js",[],"C:\\Users\\shash\\OneDrive\\Desktop\\Gits\\TGHM_final\\src\\Logic\\Location.ts",[],{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"337","line":1,"column":16,"nodeType":"338","messageId":"339","endLine":1,"endColumn":24},{"ruleId":"336","severity":1,"message":"340","line":7,"column":9,"nodeType":"338","messageId":"339","endLine":7,"endColumn":17},{"ruleId":"336","severity":1,"message":"337","line":1,"column":16,"nodeType":"338","messageId":"339","endLine":1,"endColumn":24},{"ruleId":"336","severity":1,"message":"340","line":8,"column":9,"nodeType":"338","messageId":"339","endLine":8,"endColumn":17},{"ruleId":"336","severity":1,"message":"341","line":9,"column":9,"nodeType":"338","messageId":"339","endLine":9,"endColumn":19},{"ruleId":"342","severity":1,"message":"343","line":4,"column":10,"nodeType":"338","messageId":"339","endLine":4,"endColumn":21},{"ruleId":"342","severity":1,"message":"344","line":5,"column":10,"nodeType":"338","messageId":"339","endLine":5,"endColumn":14},{"ruleId":"342","severity":1,"message":"345","line":6,"column":10,"nodeType":"338","messageId":"339","endLine":6,"endColumn":14},{"ruleId":"342","severity":1,"message":"346","line":12,"column":10,"nodeType":"338","messageId":"339","endLine":12,"endColumn":18},{"ruleId":"342","severity":1,"message":"340","line":13,"column":10,"nodeType":"338","messageId":"339","endLine":13,"endColumn":18},{"ruleId":"342","severity":1,"message":"347","line":20,"column":9,"nodeType":"338","messageId":"339","endLine":20,"endColumn":11},{"ruleId":"342","severity":1,"message":"348","line":21,"column":9,"nodeType":"338","messageId":"339","endLine":21,"endColumn":11},{"ruleId":"342","severity":1,"message":"349","line":66,"column":9,"nodeType":"338","messageId":"339","endLine":66,"endColumn":11},{"ruleId":"342","severity":1,"message":"350","line":67,"column":9,"nodeType":"338","messageId":"339","endLine":67,"endColumn":11},{"ruleId":"342","severity":1,"message":"351","line":68,"column":9,"nodeType":"338","messageId":"339","endLine":68,"endColumn":11},{"ruleId":"342","severity":1,"message":"352","line":69,"column":9,"nodeType":"338","messageId":"339","endLine":69,"endColumn":11},{"ruleId":"342","severity":1,"message":"353","line":70,"column":9,"nodeType":"338","messageId":"339","endLine":70,"endColumn":11},{"ruleId":"342","severity":1,"message":"354","line":71,"column":9,"nodeType":"338","messageId":"339","endLine":71,"endColumn":11},{"ruleId":"342","severity":1,"message":"355","line":72,"column":9,"nodeType":"338","messageId":"339","endLine":72,"endColumn":11},{"ruleId":"356","severity":1,"message":"357","line":58,"column":19,"nodeType":"358","messageId":"359","endLine":58,"endColumn":21},{"ruleId":"342","severity":1,"message":"360","line":64,"column":5,"nodeType":"338","messageId":"339","endLine":64,"endColumn":6},{"ruleId":"336","severity":1,"message":"361","line":1,"column":16,"nodeType":"338","messageId":"339","endLine":1,"endColumn":25},{"ruleId":"336","severity":1,"message":"362","line":4,"column":9,"nodeType":"338","messageId":"339","endLine":4,"endColumn":15},{"ruleId":"336","severity":1,"message":"363","line":4,"column":33,"nodeType":"338","messageId":"339","endLine":4,"endColumn":41},{"ruleId":"336","severity":1,"message":"364","line":4,"column":43,"nodeType":"338","messageId":"339","endLine":4,"endColumn":47},{"ruleId":"336","severity":1,"message":"365","line":4,"column":49,"nodeType":"338","messageId":"339","endLine":4,"endColumn":54},{"ruleId":"336","severity":1,"message":"341","line":7,"column":9,"nodeType":"338","messageId":"339","endLine":7,"endColumn":19},{"ruleId":"336","severity":1,"message":"366","line":11,"column":8,"nodeType":"338","messageId":"339","endLine":11,"endColumn":11},{"ruleId":"336","severity":1,"message":"367","line":13,"column":8,"nodeType":"338","messageId":"339","endLine":13,"endColumn":11},{"ruleId":"336","severity":1,"message":"368","line":71,"column":11,"nodeType":"338","messageId":"339","endLine":71,"endColumn":25},{"ruleId":"336","severity":1,"message":"369","line":75,"column":11,"nodeType":"338","messageId":"339","endLine":75,"endColumn":24},{"ruleId":"336","severity":1,"message":"370","line":8,"column":9,"nodeType":"338","messageId":"339","endLine":8,"endColumn":17},{"ruleId":"336","severity":1,"message":"371","line":11,"column":7,"nodeType":"338","messageId":"339","endLine":11,"endColumn":18},{"ruleId":"342","severity":1,"message":"370","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":18},{"ruleId":"342","severity":1,"message":"343","line":4,"column":10,"nodeType":"338","messageId":"339","endLine":4,"endColumn":21},{"ruleId":"342","severity":1,"message":"345","line":6,"column":10,"nodeType":"338","messageId":"339","endLine":6,"endColumn":14},{"ruleId":"342","severity":1,"message":"372","line":8,"column":10,"nodeType":"338","messageId":"339","endLine":8,"endColumn":17},{"ruleId":"342","severity":1,"message":"346","line":12,"column":10,"nodeType":"338","messageId":"339","endLine":12,"endColumn":18},{"ruleId":"342","severity":1,"message":"373","line":13,"column":10,"nodeType":"338","messageId":"339","endLine":13,"endColumn":17},{"ruleId":"342","severity":1,"message":"374","line":14,"column":10,"nodeType":"338","messageId":"339","endLine":14,"endColumn":16},{"ruleId":"342","severity":1,"message":"375","line":15,"column":8,"nodeType":"338","messageId":"339","endLine":15,"endColumn":20},{"ruleId":"342","severity":1,"message":"376","line":16,"column":8,"nodeType":"338","messageId":"339","endLine":16,"endColumn":22},{"ruleId":"342","severity":1,"message":"377","line":17,"column":8,"nodeType":"338","messageId":"339","endLine":17,"endColumn":20},{"ruleId":"342","severity":1,"message":"378","line":18,"column":8,"nodeType":"338","messageId":"339","endLine":18,"endColumn":18},{"ruleId":"342","severity":1,"message":"379","line":19,"column":8,"nodeType":"338","messageId":"339","endLine":19,"endColumn":17},{"ruleId":"342","severity":1,"message":"380","line":57,"column":21,"nodeType":"338","messageId":"339","endLine":57,"endColumn":22},{"ruleId":"342","severity":1,"message":"380","line":63,"column":21,"nodeType":"338","messageId":"339","endLine":63,"endColumn":22},{"ruleId":"342","severity":1,"message":"380","line":66,"column":21,"nodeType":"338","messageId":"339","endLine":66,"endColumn":22},{"ruleId":"342","severity":1,"message":"380","line":69,"column":21,"nodeType":"338","messageId":"339","endLine":69,"endColumn":22},{"ruleId":"342","severity":1,"message":"380","line":72,"column":21,"nodeType":"338","messageId":"339","endLine":72,"endColumn":22},{"ruleId":"342","severity":1,"message":"381","line":187,"column":29,"nodeType":"338","messageId":"339","endLine":187,"endColumn":30},{"ruleId":"356","severity":1,"message":"382","line":23,"column":14,"nodeType":"358","messageId":"359","endLine":23,"endColumn":16},{"ruleId":"356","severity":1,"message":"382","line":54,"column":26,"nodeType":"358","messageId":"359","endLine":54,"endColumn":28},{"ruleId":"356","severity":1,"message":"382","line":15,"column":14,"nodeType":"358","messageId":"359","endLine":15,"endColumn":16},{"ruleId":"356","severity":1,"message":"382","line":84,"column":26,"nodeType":"358","messageId":"359","endLine":84,"endColumn":28},{"ruleId":"342","severity":1,"message":"383","line":100,"column":17,"nodeType":"338","messageId":"339","endLine":100,"endColumn":30},{"ruleId":"384","severity":1,"message":"385","line":101,"column":39,"nodeType":"386","messageId":"387","endLine":101,"endColumn":52},{"ruleId":"356","severity":1,"message":"382","line":106,"column":26,"nodeType":"358","messageId":"359","endLine":106,"endColumn":28},{"ruleId":"356","severity":1,"message":"382","line":113,"column":26,"nodeType":"358","messageId":"359","endLine":113,"endColumn":28},{"ruleId":"356","severity":1,"message":"382","line":128,"column":17,"nodeType":"358","messageId":"359","endLine":128,"endColumn":19},{"ruleId":"384","severity":1,"message":"385","line":151,"column":49,"nodeType":"386","messageId":"387","endLine":151,"endColumn":62},{"ruleId":"356","severity":1,"message":"382","line":17,"column":14,"nodeType":"358","messageId":"359","endLine":17,"endColumn":16},{"ruleId":"342","severity":1,"message":"388","line":42,"column":13,"nodeType":"338","messageId":"339","endLine":42,"endColumn":14},{"ruleId":"342","severity":1,"message":"389","line":1,"column":9,"nodeType":"338","messageId":"339","endLine":1,"endColumn":14},{"ruleId":"342","severity":1,"message":"390","line":3,"column":9,"nodeType":"338","messageId":"339","endLine":3,"endColumn":20},{"ruleId":"342","severity":1,"message":"372","line":7,"column":9,"nodeType":"338","messageId":"339","endLine":7,"endColumn":16},{"ruleId":"342","severity":1,"message":"391","line":8,"column":9,"nodeType":"338","messageId":"339","endLine":8,"endColumn":14},{"ruleId":"342","severity":1,"message":"388","line":30,"column":17,"nodeType":"338","messageId":"339","endLine":30,"endColumn":18},{"ruleId":"342","severity":1,"message":"388","line":72,"column":21,"nodeType":"338","messageId":"339","endLine":72,"endColumn":22},{"ruleId":"356","severity":1,"message":"382","line":142,"column":55,"nodeType":"358","messageId":"359","endLine":142,"endColumn":57},{"ruleId":"356","severity":1,"message":"382","line":153,"column":40,"nodeType":"358","messageId":"359","endLine":153,"endColumn":42},{"ruleId":"356","severity":1,"message":"382","line":12,"column":14,"nodeType":"358","messageId":"359","endLine":12,"endColumn":16},{"ruleId":"392","severity":1,"message":"393","line":5,"column":5,"nodeType":"394","messageId":"395","endLine":6,"endColumn":6},{"ruleId":"342","severity":1,"message":"396","line":1,"column":10,"nodeType":"338","messageId":"339","endLine":1,"endColumn":18},{"ruleId":"342","severity":1,"message":"397","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":20},{"ruleId":"392","severity":1,"message":"393","line":6,"column":5,"nodeType":"394","messageId":"395","endLine":7,"endColumn":6},{"ruleId":"356","severity":1,"message":"382","line":13,"column":22,"nodeType":"358","messageId":"359","endLine":13,"endColumn":24},{"ruleId":"356","severity":1,"message":"382","line":28,"column":21,"nodeType":"358","messageId":"359","endLine":28,"endColumn":23},{"ruleId":"342","severity":1,"message":"397","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":20},{"ruleId":"342","severity":1,"message":"398","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":14},{"ruleId":"336","severity":1,"message":"340","line":5,"column":9,"nodeType":"338","messageId":"339","endLine":5,"endColumn":17},{"ruleId":"336","severity":1,"message":"341","line":6,"column":9,"nodeType":"338","messageId":"339","endLine":6,"endColumn":19},{"ruleId":"336","severity":1,"message":"399","line":16,"column":13,"nodeType":"338","messageId":"339","endLine":16,"endColumn":14},{"ruleId":"336","severity":1,"message":"400","line":5,"column":8,"nodeType":"338","messageId":"339","endLine":5,"endColumn":19},{"ruleId":"336","severity":1,"message":"401","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":21},{"ruleId":"336","severity":1,"message":"341","line":4,"column":9,"nodeType":"338","messageId":"339","endLine":4,"endColumn":19},{"ruleId":"336","severity":1,"message":"402","line":2,"column":19,"nodeType":"338","messageId":"339","endLine":2,"endColumn":23},{"ruleId":"336","severity":1,"message":"403","line":5,"column":9,"nodeType":"338","messageId":"339","endLine":5,"endColumn":14},{"ruleId":"336","severity":1,"message":"400","line":5,"column":8,"nodeType":"338","messageId":"339","endLine":5,"endColumn":19},{"ruleId":"336","severity":1,"message":"404","line":2,"column":9,"nodeType":"338","messageId":"339","endLine":2,"endColumn":19},{"ruleId":"336","severity":1,"message":"389","line":4,"column":9,"nodeType":"338","messageId":"339","endLine":4,"endColumn":14},{"ruleId":"336","severity":1,"message":"405","line":3,"column":9,"nodeType":"338","messageId":"339","endLine":3,"endColumn":13},{"ruleId":"336","severity":1,"message":"344","line":6,"column":9,"nodeType":"338","messageId":"339","endLine":6,"endColumn":13},{"ruleId":"336","severity":1,"message":"406","line":13,"column":13,"nodeType":"338","messageId":"339","endLine":13,"endColumn":14},{"ruleId":"336","severity":1,"message":"404","line":2,"column":9,"nodeType":"338","messageId":"339","endLine":2,"endColumn":19},{"ruleId":"336","severity":1,"message":"362","line":2,"column":44,"nodeType":"338","messageId":"339","endLine":2,"endColumn":50},{"ruleId":"336","severity":1,"message":"341","line":4,"column":9,"nodeType":"338","messageId":"339","endLine":4,"endColumn":19},"no-native-reassign",["407"],"no-negated-in-lhs",["408"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Database' is defined but never used.","'Management' is defined but never used.","@typescript-eslint/no-unused-vars","'AccountType' is defined but never used.","'Item' is defined but never used.","'Menu' is defined but never used.","'readFile' is defined but never used.","'c2' is assigned a value but never used.","'c3' is assigned a value but never used.","'a1' is assigned a value but never used.","'a2' is assigned a value but never used.","'a3' is assigned a value but never used.","'a4' is assigned a value but never used.","'a5' is assigned a value but never used.","'a6' is assigned a value but never used.","'a7' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'m' is assigned a value but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Bg3' is defined but never used.","'Bg5' is defined but never used.","'onFinishFailed' is assigned a value but never used.","'CarouselStyle' is assigned a value but never used.","'Customer' is defined but never used.","'allAccounts' is assigned a value but never used.","'Station' is defined but never used.","'Account' is defined but never used.","'System' is defined but never used.","'CustomerData' is defined but never used.","'RestaurantData' is defined but never used.","'StationsData' is defined but never used.","'TrainsData' is defined but never used.","'AgentData' is defined but never used.","'k' is assigned a value but never used.","'x' is assigned a value but never used.","Expected '===' and instead saw '=='.","'type' is assigned a value but never used.","@typescript-eslint/consistent-type-assertions","Use 'as any' instead of '<any>'.","TSTypeAssertion","as","'i' is assigned a value but never used.","'Agent' is defined but never used.","'AgentStatus' is defined but never used.","'Train' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'readSync' is defined but never used.","'Restaurant' is defined but never used.","'Time' is defined but never used.","'c' is assigned a value but never used.","'AvatarImage' is defined but never used.","'DashBoardCard' is defined but never used.","'Card' is defined but never used.","'Order' is defined but never used.","'DatePicker' is defined but never used.","'func' is defined but never used.","'a' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]