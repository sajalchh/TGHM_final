{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Desktop\\\\Gits\\\\TGHM_final\\\\src\\\\Pages\\\\DashBoardPages\\\\Restaurant\\\\RestaurantOrdersPage.js\";\nimport React from 'react';\nimport DashBoardCard from \"../../../Components/DashBoard/DashBoardCard\";\nimport { Button, Card, Form, List, message, Select } from \"antd\";\nimport { Management } from \"../../../Logic/Management\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RestaurantOrderPage(props) {\n  const onFinishFailed = errorInfo => {\n    console.log('Failed: ', errorInfo);\n  };\n\n  const computeCost = order => {\n    let cost = 0;\n\n    for (let i = 0; i < props.account.getOrderDetails(order.orderId).length; i++) {\n      cost += props.account.getOrderDetails(order.orderId)[i].price;\n    }\n\n    return cost;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.account.orderlist.map(function (value, index) {\n      console.log(value);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Order ID \" + value.orderId,\n        style: {\n          minWidth: \"2rem\",\n          maxWidth: \"32%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          style: {\n            margin: \"1rem\"\n          },\n          size: \"small\",\n          header: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"All Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 43\n          }, this),\n          bordered: true,\n          dataSource: props.account.getOrderDetails(value.orderId),\n          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n            style: {\n              borderWidth: \"1px\",\n              borderStyle: \"solid\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\",\n              padding: \"0 0 1rem\"\n            },\n            children: [\"Total Cost: \", computeCost(value)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            name: \"basic\",\n            onFinish: values => {\n              value.addAgent(values.agent); // for (let i = 0;i<props.account.getOrderDetails(value.orderId).length;i++){\n              //     value.updateOrderStatus(2, props.account.getOrderDetails(value.orderId)[i])\n              // }\n\n              message.success(\"Agent Assigned\");\n            },\n            onFinishFailed: onFinishFailed,\n            scrollToFirstError: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Input Agent: \",\n              name: \"agent\",\n              rules: [{\n                required: true,\n                message: \"Input Station to get Items List\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                showSearch: true,\n                style: {\n                  width: 200\n                },\n                placeholder: \"Select an Agent: \",\n                optionFilterProp: \"children\",\n                filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n                children: props.account.getFreeAgents().map((agent, index) => /*#__PURE__*/_jsxDEV(Select.Option, {\n                  value: agent.getID(),\n                  children: agent.getName()\n                }, agent.getID(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                children: \"Select Agent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_c = RestaurantOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantOrderPage\");","map":{"version":3,"sources":["C:/Users/shash/OneDrive/Desktop/Gits/TGHM_final/src/Pages/DashBoardPages/Restaurant/RestaurantOrdersPage.js"],"names":["React","DashBoardCard","Button","Card","Form","List","message","Select","Management","RestaurantOrderPage","props","onFinishFailed","errorInfo","console","log","computeCost","order","cost","i","account","getOrderDetails","orderId","length","price","orderlist","map","value","index","minWidth","maxWidth","margin","item","borderWidth","borderStyle","name","textAlign","padding","values","addAgent","agent","success","required","width","input","option","children","toLowerCase","indexOf","getFreeAgents","getID","getName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DashBoardCard from \"../../../Components/DashBoard/DashBoardCard\";\r\nimport {Button, Card, Form, List, message, Select} from \"antd\";\r\nimport {Management} from \"../../../Logic/Management\";\r\n\r\nexport default function RestaurantOrderPage(props){\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed: ',errorInfo);\r\n    }\r\n\r\n    const computeCost = (order) => {\r\n        let cost = 0;\r\n        for (let i = 0;i<props.account.getOrderDetails(order.orderId).length;i++){\r\n            cost += props.account.getOrderDetails(order.orderId)[i].price;\r\n        }\r\n        return cost;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.account.orderlist.map(function(value, index){\r\n                    console.log(value);\r\n                    return (\r\n                        <Card title={\"Order ID \" + value.orderId} style={{ minWidth: \"2rem\", maxWidth:\"32%\" }}>\r\n                              <List\r\n                                  style={{margin: \"1rem\"}}\r\n                                  size=\"small\"\r\n                                  header={<div>All Items</div>}\r\n                                  bordered\r\n                                  dataSource={props.account.getOrderDetails(value.orderId)}\r\n                                  renderItem={item => (\r\n                                      <List.Item style={{borderWidth: \"1px\", borderStyle: \"solid\"}}>\r\n                                          <p>{item.name}</p>\r\n                                      </List.Item>\r\n                                  )}\r\n                              />\r\n                              <div>\r\n                                  <div style={{textAlign: \"center\", padding: \"0 0 1rem\"}}>\r\n                                      Total Cost: {computeCost(value)}\r\n                                  </div>\r\n                                  <Form\r\n                                        name=\"basic\"\r\n                                        onFinish={(values) => {\r\n                                            value.addAgent(values.agent);\r\n                                            // for (let i = 0;i<props.account.getOrderDetails(value.orderId).length;i++){\r\n                                            //     value.updateOrderStatus(2, props.account.getOrderDetails(value.orderId)[i])\r\n                                            // }\r\n                                            message.success(\"Agent Assigned\");\r\n                                        }}\r\n                                        onFinishFailed={onFinishFailed}\r\n                                        scrollToFirstError\r\n                                    >\r\n                                      <Form.Item\r\n                                        label=\"Input Agent: \"\r\n                                        name=\"agent\"\r\n                                        rules = {[\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"Input Station to get Items List\",\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <Select\r\n                                            showSearch\r\n                                            style={{ width: 200 }}\r\n                                            placeholder=\"Select an Agent: \"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {\r\n                                                props.account.getFreeAgents().map((agent, index) => (\r\n                                                    <Select.Option key={agent.getID()} value={agent.getID()}>{agent.getName()}</Select.Option>\r\n                                                ))\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                      <Form.Item>\r\n                                          <Button type=\"primary\" htmlType=\"submit\">Select Agent</Button>\r\n                                      </Form.Item>\r\n                                  </Form>\r\n                              </div>\r\n                        </Card>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}