{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    let tokenString = sessionStorage.getItem('token');\n\n    if (!tokenString) {\n      tokenString = localStorage.getItem('token');\n    }\n\n    const userToken = JSON.parse(tokenString);\n    return userToken ? userToken : null;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = (userToken, remember) => {\n    sessionStorage.setItem('token', JSON.stringify(userToken));\n\n    if (remember) {\n      localStorage.setItem('token', JSON.stringify(userToken));\n    }\n\n    setToken(userToken.token);\n  };\n\n  return {\n    setToken: saveToken,\n    token\n  };\n}\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"sources":["/home/sajal/SE/project_final/TGHM_final/src/Hooks/useToken.js"],"names":["useState","useToken","getToken","tokenString","sessionStorage","getItem","localStorage","userToken","JSON","parse","token","setToken","saveToken","remember","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAC9B,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAIC,WAAW,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAlB;;AACA,QAAI,CAACF,WAAL,EAAiB;AACbA,MAAAA,WAAW,GAAGG,YAAY,CAACD,OAAb,CAAqB,OAArB,CAAd;AACH;;AACD,UAAME,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWN,WAAX,CAAlB;AACA,WAAOI,SAAS,GAAGA,SAAH,GAAa,IAA7B;AACH,GAPD;;AASA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACE,QAAQ,EAAT,CAAlC;;AAEA,QAAMU,SAAS,GAAG,CAACL,SAAD,EAAYM,QAAZ,KAAyB;AACvCT,IAAAA,cAAc,CAACU,OAAf,CAAuB,OAAvB,EAAgCN,IAAI,CAACO,SAAL,CAAeR,SAAf,CAAhC;;AACA,QAAIM,QAAJ,EAAa;AACTP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeR,SAAf,CAA9B;AACH;;AACDI,IAAAA,QAAQ,CAACJ,SAAS,CAACG,KAAX,CAAR;AACH,GAND;;AAQA,SAAM;AACFC,IAAAA,QAAQ,EAAEC,SADR;AAEFF,IAAAA;AAFE,GAAN;AAIH;;GAxBuBT,Q","sourcesContent":["import { useState } from 'react';\n\nexport default function useToken(){\n    const getToken = () => {\n        let tokenString = sessionStorage.getItem('token');\n        if (!tokenString){\n            tokenString = localStorage.getItem('token');\n        }\n        const userToken = JSON.parse(tokenString);\n        return userToken ? userToken:null;\n    };\n\n    const [token, setToken] = useState(getToken());\n\n    const saveToken = (userToken, remember) => {\n        sessionStorage.setItem('token', JSON.stringify(userToken));\n        if (remember){\n            localStorage.setItem('token', JSON.stringify(userToken));\n        }\n        setToken(userToken.token);\n    }\n\n    return{\n        setToken: saveToken,\n        token\n    }\n}"]},"metadata":{},"sourceType":"module"}