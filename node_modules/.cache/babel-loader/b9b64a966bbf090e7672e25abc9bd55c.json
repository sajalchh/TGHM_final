{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Desktop\\\\Gits\\\\TGHM_final\\\\src\\\\Pages\\\\DashBoardPages\\\\Passenger\\\\PassengerItemPage.js\";\nimport React from 'react';\nimport { Database } from \"../../../Logic/Database\";\nimport { Management } from \"../../../Logic/Management\";\nimport { Time } from \"../../../Logic/Time\";\nimport { Button, Collapse, message } from \"antd\";\nimport { Item } from \"../../../Logic/Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PassengerItemPage(props) {\n  let [mapD, mapP] = Database.getMenu(props.train, new Time(23, 59));\n\n  const handleClick = item => {\n    let newOrderList = props.orderItems;\n    newOrderList.push(item);\n    message.success(item.name + ' added to cart.');\n    props.setOrderItems(newOrderList);\n  };\n\n  const renderList = () => {\n    let rows = [];\n    console.log(mapD);\n\n    for (const [keys, values] of mapD.entries()) {\n      rows.push( /*#__PURE__*/_jsxDEV(Collapse.Panel, {\n        header: keys,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          accordion: true,\n          children: values.map(function (item, index) {\n            let l = Management.ApprovedRestaurants.get(item.restaurant);\n            let name;\n\n            if (l) {\n              name = l.getName();\n            } else {\n              name = null;\n            }\n\n            return /*#__PURE__*/_jsxDEV(Collapse.Panel, {\n              header: item.name,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Price: \", item.price, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 60\n                }, this), \"Restaurant: \", name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 59\n                }, this), \"Expected Time of Delivery: \", mapP.get(keys)[index].hour, \":\", mapP.get(keys)[index].min, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 125\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: e => handleClick(item),\n                  children: \"Add to Cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, keys, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this));\n    }\n\n    console.log(rows);\n    return rows;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Collapse, {\n      accordion: true,\n      style: {\n        margin: \"2rem\"\n      },\n      children: renderList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_c = PassengerItemPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PassengerItemPage\");","map":{"version":3,"sources":["C:/Users/shash/OneDrive/Desktop/Gits/TGHM_final/src/Pages/DashBoardPages/Passenger/PassengerItemPage.js"],"names":["React","Database","Management","Time","Button","Collapse","message","Item","PassengerItemPage","props","mapD","mapP","getMenu","train","handleClick","item","newOrderList","orderItems","push","success","name","setOrderItems","renderList","rows","console","log","keys","values","entries","map","index","l","ApprovedRestaurants","get","restaurant","getName","price","hour","min","e","margin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Database} from \"../../../Logic/Database\";\r\nimport {Management} from \"../../../Logic/Management\";\r\nimport {Time} from \"../../../Logic/Time\";\r\nimport {Button, Collapse, message} from \"antd\";\r\nimport {Item} from \"../../../Logic/Item\";\r\n\r\nexport default function PassengerItemPage(props){\r\n\r\n    let [mapD, mapP] = Database.getMenu(props.train, new Time(23, 59));\r\n\r\n    const handleClick = (item) => {\r\n        let newOrderList = props.orderItems;\r\n        newOrderList.push(item);\r\n        message.success(item.name + ' added to cart.');\r\n        props.setOrderItems(newOrderList);\r\n    }\r\n\r\n    const renderList = () => {\r\n        let rows = [];\r\n        console.log(mapD);\r\n        for (const [keys, values] of mapD.entries()){\r\n            rows.push(\r\n                <Collapse.Panel header={keys} key={keys}>\r\n                    <Collapse accordion>\r\n                        {\r\n                            values.map(function (item, index){\r\n                                let l = Management.ApprovedRestaurants.get(item.restaurant);\r\n                                let name;\r\n                                if (l){\r\n                                    name = l.getName();\r\n                                }\r\n                                else{\r\n                                    name = null;\r\n                                }\r\n                                return (\r\n                                    <Collapse.Panel key={index} header={item.name}>\r\n                                    <p>\r\n                                        Price: {item.price}<br/>\r\n                                        Restaurant: {name}<br/>\r\n                                        Expected Time of Delivery: {mapP.get(keys)[index].hour}:{mapP.get(keys)[index].min} <br />\r\n                                        <Button onClick={(e) => handleClick(item)}>Add to Cart</Button>\r\n                                    </p>\r\n                                </Collapse.Panel>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Collapse>\r\n                </Collapse.Panel>\r\n            );\r\n        }\r\n        console.log(rows);\r\n        return rows;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse accordion style={{margin: \"2rem\"}}>\r\n                {renderList()}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}