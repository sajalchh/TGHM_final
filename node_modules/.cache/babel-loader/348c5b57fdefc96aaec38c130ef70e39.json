{"ast":null,"code":"import { Management } from \"./Management\";\nimport { Account } from \"./Account\";\nexport class Station {\n  constructor(name, ID = -1) {\n    this.name = void 0;\n    this.__restaurant = [];\n    this.__food = new Set();\n    this.__ID = void 0;\n    this.deliveredCount = 0;\n    this.failedCount = 0;\n    this.name = name;\n    if (ID == -1) this.__ID = Account.unique++;else this.__ID = ID;\n    let m = Management.getInstance();\n    m.stationList.set(this.__ID, this);\n    Management.stationListForStoring.push(this);\n  }\n\n  addRestaurant(restaurant) {\n    this.__restaurant.push(restaurant.getID());\n  }\n\n  getRestaurant() {\n    return this.__restaurant;\n  }\n\n  addItem(item) {\n    this.__food.add(item);\n  }\n\n  removeItem(item) {\n    this.__food.delete(item);\n  }\n\n  getItem() {\n    //console.log(this.__food);\n    return Array.from(this.__food);\n  }\n\n  getID() {\n    return this.__ID;\n  }\n\n  static ReadStation(station) {\n    let x = new Station(station[\"name\"]);\n    x.__restaurant = station[\"__restaurant\"];\n    x.__ID = station[\"__ID\"];\n    x.deliveredCount = station[\"deliveredCount\"];\n    x.failedCount = station[\"failedCount\"]; // for (let i = station[\"__food\"].values(), val= null; val=i.next().value; ) {\n    //     x.__food.add(new Item(i[\"name\"],i[\"price\"],i[\"type\"],i[\"restaurant\"]))\n    // }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/shash/OneDrive/Desktop/Gits/TGHM_final/src/Logic/Station.ts"],"names":["Management","Account","Station","constructor","name","ID","__restaurant","__food","Set","__ID","deliveredCount","failedCount","unique","m","getInstance","stationList","set","stationListForStoring","push","addRestaurant","restaurant","getID","getRestaurant","addItem","item","add","removeItem","delete","getItem","Array","from","ReadStation","station","x"],"mappings":"AAEA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,OAAN,CAAa;AAOhBC,EAAAA,WAAW,CAACC,IAAD,EAAaC,EAAS,GAAG,CAAC,CAA1B,EAA4B;AAAA,SANvCD,IAMuC;AAAA,SAL/BE,YAK+B,GALD,EAKC;AAAA,SAJ/BC,MAI+B,GAJtB,IAAIC,GAAJ,EAIsB;AAAA,SAH/BC,IAG+B;AAAA,SAFvCC,cAEuC,GAFb,CAEa;AAAA,SADvCC,WACuC,GADhB,CACgB;AACnC,SAAKP,IAAL,GAAYA,IAAZ;AACA,QAAGC,EAAE,IAAE,CAAC,CAAR,EACI,KAAKI,IAAL,GAAaR,OAAO,CAACW,MAAR,EAAb,CADJ,KAGI,KAAKH,IAAL,GAAaJ,EAAb;AACJ,QAAIQ,CAAC,GAAGb,UAAU,CAACc,WAAX,EAAR;AACAD,IAAAA,CAAC,CAACE,WAAF,CAAcC,GAAd,CAAkB,KAAKP,IAAvB,EAA6B,IAA7B;AACAT,IAAAA,UAAU,CAACiB,qBAAX,CAAiCC,IAAjC,CAAsC,IAAtC;AACH;;AACDC,EAAAA,aAAa,CAACC,UAAD,EAAuB;AAChC,SAAKd,YAAL,CAAkBY,IAAlB,CAAuBE,UAAU,CAACC,KAAX,EAAvB;AACH;;AACDC,EAAAA,aAAa,GAAE;AACX,WAAO,KAAKhB,YAAZ;AACH;;AACDiB,EAAAA,OAAO,CAACC,IAAD,EAAY;AACf,SAAKjB,MAAL,CAAYkB,GAAZ,CAAgBD,IAAhB;AACH;;AACDE,EAAAA,UAAU,CAACF,IAAD,EAAY;AAClB,SAAKjB,MAAL,CAAYoB,MAAZ,CAAmBH,IAAnB;AACH;;AACDI,EAAAA,OAAO,GAAE;AACL;AACA,WAAOC,KAAK,CAACC,IAAN,CAAW,KAAKvB,MAAhB,CAAP;AACH;;AACDc,EAAAA,KAAK,GAAE;AACH,WAAO,KAAKZ,IAAZ;AACH;;AACiB,SAAXsB,WAAW,CAACC,OAAD,EAAiB;AAC/B,QAAIC,CAAC,GAAC,IAAI/B,OAAJ,CAAY8B,OAAO,CAAC,MAAD,CAAnB,CAAN;AACAC,IAAAA,CAAC,CAAC3B,YAAF,GAAe0B,OAAO,CAAC,cAAD,CAAtB;AACAC,IAAAA,CAAC,CAACxB,IAAF,GAAOuB,OAAO,CAAC,MAAD,CAAd;AACAC,IAAAA,CAAC,CAACvB,cAAF,GAAkBsB,OAAO,CAAC,gBAAD,CAAzB;AACAC,IAAAA,CAAC,CAACtB,WAAF,GAAeqB,OAAO,CAAC,aAAD,CAAtB,CAL+B,CAM/B;AACA;AACA;AACH;;AA7Ce","sourcesContent":["import {Restaurant} from \"./Restaurant\";\r\nimport {Item} from \"./Item\";\r\nimport { Management } from \"./Management\";\r\nimport { Account } from \"./Account\";\r\n\r\nexport class Station{\r\n    name;\r\n    private __restaurant: Array<number> = [];\r\n    private __food = new Set<Item>();\r\n    private __ID : number;\r\n    deliveredCount : number = 0;\r\n    failedCount : number = 0;\r\n    constructor(name:string,ID:number = -1){\r\n        this.name = name;\r\n        if(ID==-1)\r\n            this.__ID  = Account.unique++;\r\n        else\r\n            this.__ID  = ID;\r\n        let m = Management.getInstance();\r\n        m.stationList.set(this.__ID,(this));\r\n        Management.stationListForStoring.push(this);\r\n    }\r\n    addRestaurant(restaurant:Restaurant){\r\n        this.__restaurant.push(restaurant.getID());\r\n    }\r\n    getRestaurant(){\r\n        return this.__restaurant;\r\n    }\r\n    addItem(item: Item){\r\n        this.__food.add(item);\r\n    }\r\n    removeItem(item: Item){\r\n        this.__food.delete(item);\r\n    }\r\n    getItem(){\r\n        //console.log(this.__food);\r\n        return Array.from(this.__food);\r\n    }\r\n    getID(){\r\n        return this.__ID;\r\n    }\r\n    static ReadStation(station:Station){\r\n        let x=new Station(station[\"name\"]);\r\n        x.__restaurant=station[\"__restaurant\"];\r\n        x.__ID=station[\"__ID\"];\r\n        x.deliveredCount= station[\"deliveredCount\"];\r\n        x.failedCount= station[\"failedCount\"];\r\n        // for (let i = station[\"__food\"].values(), val= null; val=i.next().value; ) {\r\n        //     x.__food.add(new Item(i[\"name\"],i[\"price\"],i[\"type\"],i[\"restaurant\"]))\r\n        // }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}