{"ast":null,"code":"export class Account {\n  constructor(name, username, Date, Type, Password, ID = -1) {\n    this._ID = void 0;\n    this._name = void 0;\n    this._type = void 0;\n    this._openDate = void 0;\n    this._password = void 0;\n    this._username = void 0;\n    if (ID == -1) this._ID = Account.unique++;else this._ID = ID;\n    this._name = name;\n    this._type = Type;\n    this._username = username;\n    this._openDate = Date;\n    this._password = Password;\n  }\n\n  getID() {\n    return this._ID;\n  }\n\n  getType() {\n    return this._type;\n  }\n\n  getName() {\n    return this._name;\n  }\n\n  getOpenDate() {\n    return this._openDate;\n  }\n\n  checkPassword(password) {\n    return this._password === password;\n  }\n\n  getUsername() {\n    return this._username;\n  }\n\n}\nAccount.unique = 0;","map":{"version":3,"sources":["C:/Users/shash/OneDrive/Desktop/Gits/TGHM_final/src/Logic/Account.ts"],"names":["Account","constructor","name","username","Date","Type","Password","ID","_ID","_name","_type","_openDate","_password","_username","unique","getID","getType","getName","getOpenDate","checkPassword","password","getUsername"],"mappings":"AAEA,OAAO,MAAMA,OAAN,CAAa;AAQhBC,EAAAA,WAAW,CAACC,IAAD,EAAaC,QAAb,EAA6BC,IAA7B,EAAuCC,IAAvC,EAAwDC,QAAxD,EAAyEC,EAAS,GAAG,CAAC,CAAtF,EAAwF;AAAA,SANzFC,GAMyF;AAAA,SALzFC,KAKyF;AAAA,SAJzFC,KAIyF;AAAA,SAHzFC,SAGyF;AAAA,SAFzFC,SAEyF;AAAA,SADzFC,SACyF;AAC/F,QAAGN,EAAE,IAAE,CAAC,CAAR,EACI,KAAKC,GAAL,GAAWR,OAAO,CAACc,MAAR,EAAX,CADJ,KAGI,KAAKN,GAAL,GAAWD,EAAX;AACJ,SAAKE,KAAL,GAAaP,IAAb;AACA,SAAKQ,KAAL,GAAaL,IAAb;AACA,SAAKQ,SAAL,GAAiBV,QAAjB;AACA,SAAKQ,SAAL,GAAiBP,IAAjB;AACA,SAAKQ,SAAL,GAAiBN,QAAjB;AACH;;AACDS,EAAAA,KAAK,GAAE;AACH,WAAO,KAAKP,GAAZ;AACH;;AACDQ,EAAAA,OAAO,GAAE;AACL,WAAO,KAAKN,KAAZ;AACH;;AACDO,EAAAA,OAAO,GAAE;AACL,WAAO,KAAKR,KAAZ;AACH;;AACDS,EAAAA,WAAW,GAAE;AACT,WAAO,KAAKP,SAAZ;AACH;;AACDQ,EAAAA,aAAa,CAACC,QAAD,EAAyB;AAClC,WAAQ,KAAKR,SAAL,KAAmBQ,QAA3B;AACH;;AACDC,EAAAA,WAAW,GAAE;AACT,WAAO,KAAKR,SAAZ;AACH;;AApCe;AAAPb,O,CACFc,M,GAAS,C","sourcesContent":["import {AccountType} from \"./Enum\";\r\n\r\nexport class Account{\r\n    static unique = 0;  \r\n    protected _ID;\r\n    protected _name;\r\n    protected _type;\r\n    protected _openDate;\r\n    protected _password;\r\n    protected _username;\r\n    constructor(name:string,username:string,Date:Date,Type:AccountType,Password:string, ID:number = -1){\r\n        if(ID==-1)\r\n            this._ID = Account.unique++;\r\n        else\r\n            this._ID = ID;\r\n        this._name = name;\r\n        this._type = Type;\r\n        this._username = username;\r\n        this._openDate = Date;\r\n        this._password = Password;\r\n    }\r\n    getID(){\r\n        return this._ID;\r\n    }\r\n    getType(){\r\n        return this._type;\r\n    }\r\n    getName(){\r\n        return this._name;\r\n    }\r\n    getOpenDate(){\r\n        return this._openDate;\r\n    }\r\n    checkPassword(password:string):boolean{\r\n        return (this._password === password);\r\n    }\r\n    getUsername(){\r\n        return this._username;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}