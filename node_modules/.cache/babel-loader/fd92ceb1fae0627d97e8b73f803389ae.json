{"ast":null,"code":"import { OrderStatus } from \"./Enum\";\nimport { Management } from \"./Management\";\nimport { Time } from \"./Time\";\nexport class Order {\n  constructor(customer, status = 0, items, seat_Number, train, delivery_station = null) {\n    this.__customer = void 0;\n    this.Order_Status = [];\n    this.__agent = [];\n    this.__seatNumber = void 0;\n    this.__train = void 0;\n    this.__deliveryStation = void 0;\n    this.__selectedItems = [];\n    this.__Restaurants = new Set();\n    this.__OrderTime = void 0;\n    this.orderId = void 0;\n    this.__customer = customer;\n    customer.addOrder(this);\n    this.__seatNumber = seat_Number;\n    this.__train = train;\n    this.__deliveryStation = delivery_station;\n    this.__selectedItems = items;\n    this.__OrderTime = Time.getCurrentTime();\n    this.orderId = Order.unique++;\n    customer.addOrder(this);\n\n    for (let i of items) {\n      let x = Management.ApprovedRestaurants.get(i.restaurant);\n      if (x) this.__Restaurants.add(x);\n    }\n  }\n\n  setDeliveryStation(station) {\n    this.__deliveryStation = station;\n  }\n\n  addAgent(Agent) {\n    this.__agent.push(Agent);\n  }\n\n  addItem(Item) {\n    this.__selectedItems.push(Item);\n\n    let ar = Management.ApprovedRestaurants.get(Item.restaurant);\n\n    if (ar) {\n      this.__Restaurants.add(ar);\n    }\n\n    this.Order_Status.push(OrderStatus[0]);\n  }\n\n  Track_Order() {\n    return this.Order_Status;\n  }\n\n  updateOrderStatus(status, Item = null) {\n    switch (status) {\n      case 0:\n        break;\n\n      case 1:\n        for (let i of this.Order_Status) i = OrderStatus[status];\n\n        for (let i of Array.from(this.__Restaurants)) {\n          i.orderlist.push(this);\n        }\n\n        break;\n\n      case 2:\n        if (Item != null) {\n          let index = this.__selectedItems.indexOf(Item);\n\n          this.Order_Status[index] = OrderStatus[index];\n        }\n\n        break;\n\n      case 3:\n        if (Item != null) {\n          let index = this.__selectedItems.indexOf(Item);\n\n          this.Order_Status[index] = OrderStatus[index];\n        }\n\n        break;\n\n      case 4:\n        if (Item != null) {\n          let index = this.__selectedItems.indexOf(Item);\n\n          this.Order_Status[index] = OrderStatus[index];\n        }\n\n        break;\n\n      case 5:\n        if (Item != null) {\n          let index = this.__selectedItems.indexOf(Item);\n\n          this.Order_Status[index] = OrderStatus[index];\n        }\n\n        break;\n\n      case 6:\n        if (Item != null) {\n          let index = this.__selectedItems.indexOf(Item);\n\n          this.Order_Status[index] = OrderStatus[index];\n        }\n\n        break;\n    }\n  }\n\n  getCustomer() {\n    return this.__customer;\n  }\n\n  getAgent() {\n    return this.__agent;\n  }\n\n  getSeatNumber() {\n    return this.__seatNumber;\n  }\n\n  getTrain() {\n    return this.__train;\n  }\n\n  getDeliveryStation() {\n    return this.__deliveryStation;\n  }\n\n  getItems() {\n    return this.__selectedItems;\n  }\n\n  getReciept() {\n    return this.orderId;\n  }\n\n  getItemList(Restaurant) {\n    let x = [];\n\n    for (let i of this.__selectedItems) {\n      if (Management.ApprovedRestaurants.get(i.restaurant) == Restaurant) {\n        x.push(i);\n      }\n    }\n\n    return x;\n  }\n\n  getOrderStatus() {\n    if (!this.__OrderTime.sum(new Time(0, 15)).lessThanEqual(Time.getCurrentTime())) {\n      let j = 0;\n\n      for (let i of this.__selectedItems) {\n        if (this.Order_Status[j] == OrderStatus[1]) {\n          this.updateOrderStatus(3, i);\n        }\n      }\n    }\n\n    return [this.__selectedItems, this.Order_Status];\n  }\n\n  getOrderStations(Restaurant) {\n    let list = new Set();\n\n    let route = this.__train.Return_RouteStation();\n\n    let time = this.__train.Return_RouteTime();\n\n    for (let i of Array.from(route.keys())) {\n      var _time$get;\n\n      if ((_time$get = time.get(i)) === null || _time$get === void 0 ? void 0 : _time$get.lessThanEqual(Time.getCurrentTime())) {\n        for (let k of this.__selectedItems) {\n          var _Management$stationLi;\n\n          let temp = route.get(i);\n          if (temp) if (((_Management$stationLi = Management.stationList.get(temp)) === null || _Management$stationLi === void 0 ? void 0 : _Management$stationLi.getItem().indexOf(k)) != -1 && Restaurant.getPrice(k.name) != -1) {\n            let temp2 = Management.stationList.get(temp);\n            if (temp2) list.add(temp2);\n          }\n        }\n      }\n    }\n\n    return Array.from(list);\n  }\n\n} // var c= new Customer(\"a\",\"B\",\"C\",\"d\");\n// var n= new Agent();\n// var m=new Map();\n// m.set(\"!1\",\"Try\");\n// var t=new Train(\"train\",m);\n// var s=new Station(\"asdd\");\n// var item=[\"x\",\"y\",\"z\"];\n// var o= new Order(c,1,n,\"a11\",t,s,item);\n// console.log(o.Track_Order());\n\nOrder.unique = 0;","map":{"version":3,"sources":["/home/sajal/SE/project_final/TGHM_final/src/Logic/Order.ts"],"names":["OrderStatus","Management","Time","Order","constructor","customer","status","items","seat_Number","train","delivery_station","__customer","Order_Status","__agent","__seatNumber","__train","__deliveryStation","__selectedItems","__Restaurants","Set","__OrderTime","orderId","addOrder","getCurrentTime","unique","i","x","ApprovedRestaurants","get","restaurant","add","setDeliveryStation","station","addAgent","Agent","push","addItem","Item","ar","Track_Order","updateOrderStatus","Array","from","orderlist","index","indexOf","getCustomer","getAgent","getSeatNumber","getTrain","getDeliveryStation","getItems","getReciept","getItemList","Restaurant","getOrderStatus","sum","lessThanEqual","j","getOrderStations","list","route","Return_RouteStation","time","Return_RouteTime","keys","k","temp","stationList","getItem","getPrice","name","temp2"],"mappings":"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","sourcesContent":["import {Agent} from \"./Agent\";\nimport {Customer} from \"./Customer\";\nimport {AgentStatus, OrderStatus} from \"./Enum\";\nimport { Item } from \"./Item\";\nimport { Management } from \"./Management\";\nimport {Restaurant} from \"./Restaurant\";\nimport {Station} from \"./Station\";\nimport {Train} from \"./Train\";\nimport {Time} from \"./Time\";\n\nexport class Order{\n    static unique =0;\n    private __customer:Customer;\n    Order_Status:Array<string> = [];\n    private __agent: Array<number> = [];\n    private __seatNumber: string;\n    private __train: Train;\n    private __deliveryStation: Station|null;\n    private __selectedItems : Array<Item> = [];\n    private __Restaurants = new Set<Restaurant>();\n    __OrderTime : Time;\n    orderId;\n    constructor(customer:Customer,status:number=0,items:Array<Item>,seat_Number:string,train:Train, delivery_station:Station|null = null){\n        this.__customer=customer;\n        customer.addOrder(this);\n        this.__seatNumber=seat_Number;\n        this.__train=train;\n        this.__deliveryStation=delivery_station;\n        this.__selectedItems=items;\n        this.__OrderTime = Time.getCurrentTime();\n        this.orderId = Order.unique++;\n        customer.addOrder(this);\n        for(let i of items){\n            let x  = Management.ApprovedRestaurants.get(i.restaurant);\n            if(x)\n            this.__Restaurants.add(x);\n        }\n    }\n\n    setDeliveryStation(station : Station){\n        this.__deliveryStation = station;\n    }\n\n    addAgent(Agent : number){\n        this.__agent.push(Agent);\n    }\n\n    addItem(Item : Item){\n        this.__selectedItems.push(Item);\n        let ar=Management.ApprovedRestaurants.get(Item.restaurant);\n        if(ar){\n        this.__Restaurants.add(ar);\n        }\n        this.Order_Status.push(OrderStatus[0]);\n    }\n\n    Track_Order(){\n        return this.Order_Status;\n    }\n\n    updateOrderStatus(status:number, Item : Item|null = null){\n        switch (status){\n            case 0:\n                break;\n            case 1:\n                for(let i of this.Order_Status)\n                    i=OrderStatus[status];\n                for(let i of Array.from(this.__Restaurants)){\n                    i.orderlist.push(this);\n                }\n                break;\n            case 2:\n                if(Item!=null){\n                    let index = this.__selectedItems.indexOf(Item);\n                    this.Order_Status[index] = OrderStatus[index];\n                }\n                break;\n            case 3:\n                if(Item!=null){\n                    let index = this.__selectedItems.indexOf(Item);\n                    this.Order_Status[index] = OrderStatus[index];\n                }\n                break;\n            case 4:\n                if(Item!=null){\n                    let index = this.__selectedItems.indexOf(Item);\n                    this.Order_Status[index] = OrderStatus[index];\n                }\n                break;\n            case 5:\n                if(Item!=null){\n                    let index = this.__selectedItems.indexOf(Item);\n                    this.Order_Status[index] = OrderStatus[index];\n                }\n                break;\n            case 6:\n                if(Item!=null){\n                    let index = this.__selectedItems.indexOf(Item);\n                    this.Order_Status[index] = OrderStatus[index];\n                }\n                break;\n        }\n    }\n\n    getCustomer(){\n        return this.__customer;\n    }\n\n    getAgent(){\n        return this.__agent;\n    }\n\n    getSeatNumber(){\n        return this.__seatNumber;\n    }\n\n    getTrain(){\n        return this.__train;\n    }\n\n    getDeliveryStation(){\n        return this.__deliveryStation;\n    }\n\n    getItems(){\n        return this.__selectedItems;\n    }\n\n    getReciept(){\n        return this.orderId;\n    }\n\n    getItemList(Restaurant : Restaurant) : Array<Item>{\n        let x = [];\n        for(let i of this.__selectedItems){\n            if(Management.ApprovedRestaurants.get(i.restaurant)==Restaurant){\n                x.push(i);\n            }\n        }\n        return x;\n    }\n\n    getOrderStatus() : [Array<Item>, Array<string>]{\n        if(!this.__OrderTime.sum(new Time(0,15)).lessThanEqual(Time.getCurrentTime())){\n            let j=0;\n            for(let i of this.__selectedItems){\n                if(this.Order_Status[j]==OrderStatus[1]){\n                    this.updateOrderStatus(3,i);\n                }\n            }\n        }\n        return [this.__selectedItems,this.Order_Status];\n    }\n    getOrderStations(Restaurant : Restaurant) : Array<Station>{\n        let list = new Set<Station>();\n        let route = this.__train.Return_RouteStation();\n        let time = this.__train.Return_RouteTime();\n        for (let i of Array.from(route.keys())){\n            if(time.get(i)?.lessThanEqual(Time.getCurrentTime())){\n                for(let k of this.__selectedItems){\n                    let temp = route.get(i);\n                    if(temp)\n                    if(Management.stationList.get(temp)?.getItem().indexOf(k)!=-1 && Restaurant.getPrice(k.name)!=-1){\n                        let temp2 = Management.stationList.get(temp);\n                        if(temp2)\n                        list.add(temp2);\n                    }\n                }\n            }\n        }\n        return Array.from(list);\n    }\n\n}\n// var c= new Customer(\"a\",\"B\",\"C\",\"d\");\n// var n= new Agent();\n// var m=new Map();\n// m.set(\"!1\",\"Try\");\n// var t=new Train(\"train\",m);\n// var s=new Station(\"asdd\");\n// var item=[\"x\",\"y\",\"z\"];\n// var o= new Order(c,1,n,\"a11\",t,s,item);\n// console.log(o.Track_Order());\n"]},"metadata":{},"sourceType":"module"}