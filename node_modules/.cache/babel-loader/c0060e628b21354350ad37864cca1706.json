{"ast":null,"code":"export class Time {\n  constructor(hour = 0, min = 0, day = 0) {\n    this.min = 0;\n    this.hour = 0;\n    this.day = 0;\n    this.min = min;\n    this.hour = hour;\n    this.day = day;\n  }\n\n  checkValidity() {}\n\n  static currentTime(date) {\n    let t = new Time(date.getHours(), date.getMinutes());\n    return t;\n  }\n\n  updateTime() {\n    let date = new Date();\n    this.min = date.getMinutes();\n    this.hour = date.getHours();\n    this.day = 0;\n  }\n\n  static getCurrentTime() {\n    let d = new Date();\n    return new Time(d.getHours(), d.getMinutes());\n  }\n\n  lessThanEqual(time) {\n    // if(this.hour<=time.hour) {\n    //     return true;\n    // }\n    //     else{\n    //\n    //     }\n    //     if(this.min<=time.min){\n    //         return true;\n    //     }\n    //     else{\n    //         return false;\n    //     }\n    // }\n    // return false;\n    if (this.hour < time.hour) return true;else if (this.hour === time.hour) {\n      if (this.min <= time.min) return true;else return false;\n    } else return false;\n  }\n\n  dif(time) {\n    if (this.lessThanEqual(time)) {\n      return new Time();\n    } else {\n      let t = new Time();\n      t.hour = this.hour - time.hour;\n      t.min = this.min - time.min;\n\n      if (t.min < 0) {\n        t.min += 60;\n        t.hour--;\n      }\n\n      return t;\n    }\n  }\n\n  sum(time) {\n    let t = new Time();\n    t.hour = this.hour + time.hour;\n    t.min = this.min + time.min;\n\n    if (t.min > 59) {\n      t.hour += Math.floor(t.min / 60);\n      t.day += Math.floor(t.hour / 24);\n      t.hour %= 24;\n      t.min %= 60;\n    }\n\n    return t;\n  }\n\n}","map":{"version":3,"sources":["/home/sajal/SE/project_final/TGHM_final/src/Logic/Time.ts"],"names":["Time","constructor","hour","min","day","checkValidity","currentTime","date","t","getHours","getMinutes","updateTime","Date","getCurrentTime","d","lessThanEqual","time","dif","sum","Math","floor"],"mappings":"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","sourcesContent":["export class Time{\n    min : number=0;\n    hour : number=0;\n    day : number=0;\n    constructor(hour : number=0, min:number=0 ,day:number=0){\n        this.min = min;\n        this.hour = hour;\n        this.day = day;\n    }\n    checkValidity(){\n    }\n    static currentTime(date : Date){\n        let t = new Time(date.getHours(),date.getMinutes());\n        return t;\n    }\n    updateTime(){\n        let date  = new Date();\n        this.min = date.getMinutes();\n        this.hour = date.getHours();\n        this.day = 0;\n    }\n    static getCurrentTime() : Time{\n        let d = new Date();\n        return new Time(d.getHours(),d.getMinutes());\n    }\n    lessThanEqual(time:Time): boolean{\n        // if(this.hour<=time.hour) {\n        //     return true;\n        // }\n        //     else{\n        //\n        //     }\n        //     if(this.min<=time.min){\n        //         return true;\n        //     }\n        //     else{\n        //         return false;\n        //     }\n        // }\n        // return false;\n        if (this.hour<time.hour) return true;\n        else if (this.hour === time.hour){\n            if (this.min <= time.min) return true;\n            else return false;\n        }\n        else return false;\n    }\n\n    dif(time:Time){\n        if(this.lessThanEqual(time)){\n            return new Time();\n        }\n        else{\n            let t=new Time();\n            t.hour=this.hour-time.hour;\n            t.min=this.min-time.min;\n            if(t.min<0){\n                t.min+=60;\n                t.hour--;\n            }\n            return t;\n        }\n    }\n    sum(time:Time){\n        let t=new Time();\n            t.hour=this.hour+time.hour;\n            t.min=this.min+time.min;\n            if(t.min>59){\n                t.hour+=Math.floor(t.min/60);\n                t.day+=Math.floor(t.hour/24);\n                t.hour%=24;\n                t.min%=60;\n            }\n            return t;\n    }\n}"]},"metadata":{},"sourceType":"module"}