{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Desktop\\\\Gits\\\\TGHM_final\\\\src\\\\Pages\\\\Registration\\\\RouteForm.js\";\nimport { Form, Input, Button, Space, Select, TimePicker, Col, Row, InputNumber } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport { Management } from \"../../Logic/Management\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RouteForm() {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  const HeadingStyled = styled.h2`\n        font-size: 1.5rem;\n        font-weight: 600;\n    `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HeadingStyled, {\n      children: \"Fill in the form to add a Train\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      name: \"dynamic_form_nest_item\",\n      onFinish: onFinish,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          offset: 2,\n          span: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Name\",\n            name: \"name\",\n            rules: [{\n              required: true,\n              message: \"Name required\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          offset: 2,\n          span: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Number\",\n            name: \"number\",\n            rules: [{\n              required: true,\n              message: \"Number required\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.List, {\n        name: \"stations\",\n        children: (fields, {\n          add,\n          remove\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [fields.map(({\n            key,\n            name,\n            fieldKey,\n            ...restField\n          }) => /*#__PURE__*/_jsxDEV(Space, {\n            style: {\n              display: 'flex',\n              marginBottom: 8\n            },\n            align: \"baseline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n              name: [name, 'first'],\n              fieldKey: [fieldKey, 'first'],\n              rules: [{\n                required: true,\n                message: 'Missing Station Field'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                showSearch: true,\n                style: {\n                  width: 200\n                },\n                placeholder: \"Select a station\",\n                optionFilterProp: \"children\",\n                filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n                children: Management.stationListForStoring.map((station, index) => /*#__PURE__*/_jsxDEV(Select.Option, {\n                  value: index,\n                  children: station.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n              name: [name, 'last'],\n              fieldKey: [fieldKey, 'last'],\n              rules: [{\n                required: true,\n                message: 'Missing last name'\n              }],\n              children: /*#__PURE__*/_jsxDEV(TimePicker, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n              onClick: () => remove(name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"dashed\",\n              onClick: () => add(),\n              block: true,\n              icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 71\n              }, this),\n              children: \"Add Station in Route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}\n_c = RouteForm;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteForm\");","map":{"version":3,"sources":["C:/Users/shash/OneDrive/Desktop/Gits/TGHM_final/src/Pages/Registration/RouteForm.js"],"names":["Form","Input","Button","Space","Select","TimePicker","Col","Row","InputNumber","MinusCircleOutlined","PlusOutlined","styled","React","Management","RouteForm","onFinish","values","console","log","HeadingStyled","h2","width","required","message","fields","add","remove","map","key","name","fieldKey","restField","display","marginBottom","input","option","children","toLowerCase","indexOf","stationListForStoring","station","index"],"mappings":"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","sourcesContent":["import {Form, Input, Button, Space, Select, TimePicker, Col, Row, InputNumber} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport {Management} from \"../../Logic/Management\";\r\n\r\nexport default function RouteForm(){\r\n  const onFinish = values => {\r\n    console.log('Received values of form:', values);\r\n  };\r\n\r\n  const HeadingStyled = styled.h2`\r\n        font-size: 1.5rem;\r\n        font-weight: 600;\r\n    `\r\n\r\n  return (\r\n      <div>\r\n            <HeadingStyled>Fill in the form to add a Train</HeadingStyled>\r\n    <Form name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\r\n        <Row style={{width: \"100%\"}}>\r\n                    <Col offset={2} span={10}>\r\n                        <Form.Item\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Name required\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col offset={2} span={10}>\r\n                        <Form.Item\r\n                            label=\"Number\"\r\n                            name=\"number\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Number required\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <InputNumber />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n      <Form.List name=\"stations\">\r\n        {(fields, { add, remove }) => (\r\n          <>\r\n            {fields.map(({ key, name, fieldKey, ...restField }) => (\r\n              <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                <Form.Item\r\n                  {...restField}\r\n                  name={[name, 'first']}\r\n                  fieldKey={[fieldKey, 'first']}\r\n                  rules={[{ required: true, message: 'Missing Station Field' }]}\r\n                >\r\n                    <Select\r\n                            showSearch\r\n                            style={{ width: 200 }}\r\n                            placeholder=\"Select a station\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                            {\r\n                                Management.stationListForStoring.map((station, index) => (\r\n                                    <Select.Option key={index} value={index}>{station.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  {...restField}\r\n                  name={[name, 'last']}\r\n                  fieldKey={[fieldKey, 'last']}\r\n                  rules={[{ required: true, message: 'Missing last name' }]}\r\n                >\r\n                  <TimePicker />\r\n                </Form.Item>\r\n                <MinusCircleOutlined onClick={() => remove(name)} />\r\n              </Space>\r\n            ))}\r\n            <Form.Item>\r\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                Add Station in Route\r\n              </Button>\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n      </Form.List>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n      </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}